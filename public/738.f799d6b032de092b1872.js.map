{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","./src/app/product-card/product-card.component.html","./src/app/product-card/product-card.component.ts","./src/app/dashboard/collection/category/category.component.html","./src/app/dashboard/collection/category/category.component.ts","./src/app/dashboard/collection/collection.component.html","./src/app/dashboard/collection/collection.component.ts","./src/app/dashboard/home.component.html","./src/app/dashboard/home.component.ts","./src/app/products/products.component.html","./src/app/products/products.component.ts","./src/app/fixtures/fixtures.component.html","./src/app/fixtures/fixtures.component.ts","./src/app/fixtures/fixture/fixture.component.html","./src/app/fixtures/fixture/fixture.component.ts","./src/app/about-us/about-us.component.ts","./src/app/about-us/about-us.component.html","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","./src/app/password-dialog/password-dialog.component.ts","./src/app/password-dialog/password-dialog.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","./src/app/fixtures/fixture/fixture-add/fixture-add.component.html","./src/app/fixtures/fixture/fixture-add/fixture-add.component.ts","./src/app/news/news.component.html","./src/app/news/news.component.ts","./src/app/news/add-news/add-news.component.html","./src/app/news/add-news/add-news.component.ts","./src/app/news/news-detail/news-detail.component.html","./src/app/news/news-detail/news-detail.component.ts","./src/app/privacy-policy/privacy-policy.component.ts","./src/app/privacy-policy/privacy-policy.component.html","./src/app/layouts/admin-layout/admin-layout.routing.ts","./src/app/contact-us/contact-us.component.ts","./src/app/contact-us/contact-us.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","./node_modules/ngx-image-zoom/fesm2020/ngx-image-zoom.mjs","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","./src/app/layouts/admin-layout/admin-layout.module.ts"],"names":["_c0","_MatProgressBarBase","_elementRef","this","MAT_PROGRESS_BAR_LOCATION","providedIn","factory","_document","_location","location","getPathname","pathname","search","progressbarId","MatProgressBar","elementRef","_ngZone","_animationMode","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","Subscription","mode","path","split","_rectangleFillValue","v","clamp","transform","value","bufferValue","runOutsideAngular","element","_primaryValueBar","nativeElement","fromEvent","pipe","filter","e","target","subscribe","run","next","unsubscribe","ɵfac","t","ɵcmp","type","selectors","viewQuery","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","inputs","color","outputs","exportAs","features","decls","vars","consts","template","_bufferTransform","_primaryTransform","directives","styles","encapsulation","changeDetection","min","max","Math","MatProgressBarModule","ɵmod","ɵinj","imports","_c1","_c2","BUTTON_HOST_ATTRIBUTES","_MatButtonBase","MatButton","_focusMonitor","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","classList","add","monitor","stopMonitoring","origin","options","focusVia","focus","disableRipple","disabled","attributes","some","attribute","hasAttribute","ripple","attrs","ngContentSelectors","_isRippleDisabled","MatAnchor","focusMonitor","animationMode","event","preventDefault","stopImmediatePropagation","$event","_haltDisabledEvents","tabIndex","toString","MatButtonModule","datePipe","game","currentDate","Date","ngOnInit","ProductCardComponent","last","CategoryComponent","activeRoute","productService","fixture","paramMap","params","collectionName","get","getAllData","res","CollectionComponent","router","fixtures","loading","lazyLoad","navbarfixed","skip","limit","totalCollections","news","teams","leagues","homeFixtures","onScroll","window","scrollY","instersectionObserver","getFixtures","getdbLeagues","getdbTeams","getAllNews","trending","ngAfterViewInit","setTimeout","push","console","error","theLastList","changes","d","observer","observe","length","IntersectionObserver","entries","isIntersecting","root","rootMargin","threshold","HomeComponent","products","subCategories","subProducts","category","inputText","rating","starCount","ratingUpdated","league","ratingArr","index","queryParams","searchQuery","searchProducts","collection","getGamesByLeague","showIcon","round","ProductsComponent","team","topTeams","topLeagues","showTeam","details","getTeamLeagueDescription","getDescription","description","paragraphs","replaceFixture","teamName","find","name","isTeam","replaceLeague","leagueName","getGameFixture","navigate","state","JSON","stringify","val","getTopGames","getTopLeagues","getTeamFixtures","getLeagueFixtures","FixturesComponent","data","counter","streamLinks","getStreams","matchFinished","currentLocaDate","matchIsLive","matchDate","newsColumn1","newsColumn2","getTeamFixture","parse","localStorage","getItem","fixtureDateTime","setCountdownInterval","setInterval","date","fixtureDate","ud","getUTCCurrentDate","cdt","getUTCCurrentDateTime","umt","getUTCCurrentTime","matchTime","matchdateTime","specialDateTime","currentUTCTime","getTime","matchUTCTime","now","abs","days","floor","dayDiff","hours","timeDiff","streamerLinks","getStreamLinks","sourceLink","timeRemaining","minutes","seconds","trim","toLowerCase","includes","getLinksByMatch","filterType","teamA","teamB","categoryName","subCat","subCateogryName","subCategoryName","matchDateTime","getDateTime","link","getLiveStreams","navigateLink","open","time","periodObj","militaryHours","parseInt","setHours","formatDate","dateString","dateComponents","year","month","day","UTC","getUTCFullYear","getUTCMonth","getUTCDate","join","utcDate","obj","getSeconds","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","ampm","length1","slice","gameName","fixtureTeams","clear","fix","getState","gameFixture","fixtureTime","storageData","setItem","FixtureComponent","AboutUsComponent","ScrollDispatcher","_platform","document","_scrolled","Subject","_globalSubscription","_scrolledCount","scrollContainers","Map","scrollable","has","set","elementScrolled","scrollableReference","delete","auditTimeInMs","isBrowser","Observable","_addGlobalListener","subscription","auditTime","_removeGlobalListener","of","forEach","_","container","deregister","complete","elementOrElementRef","ancestors","getAncestorScrollContainers","scrolled","indexOf","scrollingContainers","_subscription","_scrollableContainsElement","defaultView","scrollableElement","getElementRef","parentElement","_getWindow","ɵprov","token","ViewportRuler","ngZone","_change","_changeListener","addEventListener","change","_viewportSize","removeEventListener","_updateViewportSize","output","width","height","scrollPosition","getViewportScrollPosition","getViewportSize","top","left","bottom","right","documentElement","documentRect","getBoundingClientRect","body","scrollTop","scrollLeft","scrollX","throttleTime","innerWidth","innerHeight","CdkScrollableModule","ScrollingModule","scrollBehaviorSupported","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","_isEnabled","_canBeEnabled","_previousScrollPosition","style","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","scroll","contains","viewport","scrollHeight","scrollWidth","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","disable","_overlayRef","hasAttached","detach","overlayRef","stream","_initialScrollPosition","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","containerBounds","isElementClippedByScrolling","scrollContainerRect","RepositionScrollStrategy","scrollThrottle","autoClose","overlayRect","overlayElement","ScrollStrategyOptions","noop","close","config","block","reposition","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","Object","keys","key","undefined","ConnectionPositionPair","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","BaseOverlayDispatcher","_attachedOverlays","splice","OverlayKeyboardDispatcher","_keydownListener","overlays","i","_keydownEvents","observers","_isAttached","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_clickListener","_outsidePointerEvents","IOS","_cursorOriginalValue","cursor","globalsForTest","isTestEnvironment","__karma__","jasmine","jest","Mocha","OverlayContainer","_containerElement","parentNode","removeChild","_createContainer","containerClass","oppositePlatformContainers","querySelectorAll","createElement","setAttribute","appendChild","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_outsideClickDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","take","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","dir","direction","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","cssClasses","isAdd","cssClass","takeUntil","merge","children","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","fallback","originRect","viewportRect","flexibleFits","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","start","pushX","pushY","overflowRight","overflowBottom","overflowTop","overflowLeft","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","xOrigin","elements","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","previousHeight","previousWidth","_hasExactPosition","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","clientHeight","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","Element","destination","source","hasOwnProperty","input","units","parseFloat","clientRect","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","onPositionChange","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","ɵdir","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","disableClose","backdropClick","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","create","_buildConfig","attachments","emit","detachments","keydownEvents","keyCode","outsidePointerEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","_createOverlay","takeWhile","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","providers","MatDialogContainer_ng_template_0_Template","MatDialogConfig","role","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","_MatDialogContainerBase","_focusTrapFactory","_changeDetectorRef","_animationStateChanged","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","attachDomPortal","_ariaLabelledBy","_setupFocusTrap","_capturePreviouslyFocusedElement","_focusDialogContainer","attachComponentPortal","attachTemplatePortal","_containsFocus","_focusTrap","focusInitialElement","focusInitialElementWhenReady","previousElement","activeElement","destroy","MatDialogContainer","arguments","_state","toState","totalTime","_trapFocus","_restoreFocus","markForCheck","ɵMatDialogContainer_BaseFactory","_onAnimationStart","_onAnimationDone","_id","animation","uniqueId","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","_closeFallbackTimeout","_finishDialogClose","_result","componentInstance","_closeDialogVia","_recaptureFocus","dialogResult","_startExitAnimation","_getPositionStrategy","centerHorizontally","centerVertically","addPanelClass","removePanelClass","ref","interactionType","result","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","_MatDialogBase","_defaultOptions","_parentDialog","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","defer","openDialogs","_getAfterAllClosed","startWith","afterOpened","componentOrTemplateRef","defaultOptions","_applyConfigDefaults","getDialogById","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","afterClosed","_removeOpenDialog","_initializeWithAttachedContent","_closeDialogs","dialog","_getOverlayConfig","dialogConfig","global","injector","useValue","containerPortal","componentFactoryResolver","instance","$implicit","_createInjector","contentRef","userInjector","previousValue","removeAttribute","siblings","sibling","nodeName","getAttribute","dialogs","MatDialog","parentDialog","MatDialogModule","onSubmit","email","password","PasswordDialogComponent","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","_control","placeholder","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","appearance","_labelId","_hasLabel","hideRequiredMarker","required","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","MAT_ERROR","matFormFieldAnimations","transitionMessages","MatFormFieldControl","_MAT_HINT","MatLabel","MatPlaceholder","MAT_PREFIX","MAT_SUFFIX","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_destroyed","_showAlwaysAnimate","_hintLabel","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_appearance","oldValue","_processHints","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_hasFloatingLabel","_connectionContainerRef","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","detectChanges","prop","_placeholderChild","_labelChildNonStatic","_labelChildStatic","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_label","_validateHints","ids","userAriaDescribedBy","_getDisplayedMessages","startHint","hint","align","endHint","setDescribedByIds","labelEl","textContent","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","outlineGapPadding","rect","getRootNode","rootNode","contentQueries","dirIndex","underlineRef","_inputContainerRef","_hideControlPlaceholder","autofilled","focused","_shouldForward","useExisting","onContainerClick","MatFormFieldModule","MatSelect_span_4_Template","ctx_r2","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_ng_content_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","_panelDoneAnimatingStream","_handleKeydown","_getPanelTheme","_transformOrigin","_triggerFontSize","multiple","_getPanelAriaLabelledby","matSelectAnimations","transformPanelWrap","optional","transformPanel","SELECT_PANEL_MAX_HEIGHT","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","_MatSelectMixinBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","MAT_SELECT_TRIGGER","_MatSelectBase","_parentFormField","_liveAnnouncer","_a","_b","_c","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_destroy","_onChange","_onTouched","_valueId","_overlayPanelClass","overlayPanelClass","_focused","_required","_multiple","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","switchMap","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","_placeholder","fn","_selectionModel","_initializeSelection","newValue","Array","isArray","_setSelectionByValue","distinctUntilChanged","_panelDoneAnimating","panelOpen","_initKeyManager","changed","added","select","removed","deselect","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","updateErrorState","_keyManager","withTypeAhead","_canOpen","withHorizontalOrientation","_highlightCorrectOption","isDisabled","selected","selectedOptions","viewValue","reverse","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","A","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_overlayDir","_positioningSettled","isEmpty","Promise","resolve","then","setInactiveStyles","_selectValue","_sortValues","correspondingOption","updateActiveItem","isSelected","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","tabOut","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","setActiveItem","_propagateChanges","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","setFirstItemActive","labelId","getLabelId","ariaLabelledby","isOpen","_ariaDescribedby","trigger","compareWith","errorStateMatcher","MatSelect","_scrollTop","_positions","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","_triggerRect","getComputedStyle","fontSize","_calculateOverlayPosition","labelCount","optionGroups","_calculateOverlayOffsetX","viewportSize","paddingWidth","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_PADDING_X","group","leftOverflow","rightOverflow","optionOffsetFromPanelTop","optionHeightAdjustment","maxOptionsDisplayed","_getItemCount","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","selectedOptionOffset","items","panelHeight","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","ɵMatSelect_BaseFactory","_onFocus","_onBlur","_getAriaActiveDescendant","toggle","_onAttached","_r0","MatSelectModule","listenerOptions","passive","AutofillMonitor","_monitoredElements","elementOrRef","E","info","subject","listener","animationName","isAutofilled","unlisten","_info","TextFieldModule","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","MatInput","inputValueAccessor","_autofillMonitor","_formField","_disabled","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","el","selectionStart","selectionEnd","setSelectionRange","_isServer","_isNativeSelect","_isTextarea","_isInFormField","_validateType","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","isFocused","readonly","call","_previousPlaceholder","validity","badInput","_isNeverEmpty","_isBadInput","selectElement","firstOption","label","_focusChanged","_onInput","MatInputModule","fb","authenticated","authError","selectedFile","getTeamsAndLeagues","allData","Teams","Leagues","l","productForm","image","openPasswordDialog","sendPasswordToBackend","authenticateUser","getTeamLeague","entity","selectedLeagueGame","onFileSelected","files","item","public_id","publicId","formData","FormData","append","String","addTeamLeague","log","FixtureAddComponent","getLatestNews","NewsComponent","selectedNews","operation","htmlTemplate","defaultForm","title","imageThumb","htmlDescription","updateNewsCard","addNewsCard","populateData","AddNewsComponent","relatedNews","replaceNews","newsId","columnNo","findIndex","temp","newsCategory","getNewsById","NewsDetailComponent","PrivacyPolicyComponent","AdminLayoutRoutes","component","formBuilder","buildForm","send","alert","form","message","ContactUsComponent","redirectTo","pathMatch","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MatTooltipModule","MatCardModule","NgxImageZoomModule","MatProgressSpinnerModule","AdminLayoutModule"],"mappings":"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","file":"738.f799d6b032de092b1872.js","sourcesContent":["import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatProgressBar.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nconst _MatProgressBarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/** @docs-private */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** Counter used to generate unique IDs for progress bars. */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarBase {\n    constructor(elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /** Flag that indicates whether NoopAnimations mode is set to true. */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /** Reference to animation end subscription to be unsubscribed on destroy. */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /** ID of the progress bar. */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() { return this._value; }\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /** Buffer value of the progress bar. Defaults to zero. */\n    get bufferValue() { return this._bufferValue; }\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    _primaryTransform() {\n        // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n        const scale = this.value / 100;\n        return { transform: `scale3d(${scale}, 1, 1)` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n            const scale = this.bufferValue / 100;\n            return { transform: `scale3d(${scale}, 1, 1)` };\n        }\n        return null;\n    }\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular((() => {\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                fromEvent(element, 'transitionend')\n                    .pipe(filter(((e) => e.target === element)))\n                    .subscribe(() => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run(() => this.animationEnd.next({ value: this.value }));\n                    }\n                });\n        }));\n    }\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"tabindex\", \"-1\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 4, consts: [[\"aria-hidden\", \"true\"], [\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(1, \"svg\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"defs\");\n        ɵngcc0.ɵɵelementStart(3, \"pattern\", 2);\n        ɵngcc0.ɵɵelement(4, \"circle\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"rect\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(9, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    // set tab index to -1 so screen readers will read the aria-label\n                    // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                    'tabindex': '-1',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div aria-hidden=\\\"true\\\">\\n  <svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n    <defs>\\n      <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n        <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n      </pattern>\\n    </defs>\\n    <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n  </svg>\\n  <!--\\n    The background div is named as such because it appears below the other divs and is not sized based\\n    on values.\\n  -->\\n  <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n  <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n  <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵfac = function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); };\nMatProgressBarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n//# sourceMappingURL=progress-bar.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst _c2 = \".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\";\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\nconst _MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    // Add a class for disabled button styling instead of the using attribute\n                    // selector or pseudo-selector.  This allows users to create focusabled\n                    // disabled buttons without recreating the styles.\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵfac = function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); };\nMatButtonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton, MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton, MatAnchor, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","<div class=\"fixture-card\">\r\n  <div class=\"fixture-body\">\r\n    <div class=\"fixture-header\">\r\n      <!-- <div class=\"fixture-date\"> -->\r\n        <!-- <div class=\"fixture-date\"> -->\r\n        <h3 class=\"fixture-date-value\"><span><i class=\"material-icons date-icon\">date_range</i></span> {{ currentDate }}</h3>\r\n        <!-- </div> -->\r\n        <h4 class=\"fixture-time-value\"><span><i class=\"material-icons time-icon\">access_time</i></span>Match time here</h4>\r\n      <!-- </div> -->\r\n    </div>\r\n      <div *ngIf=\"game.teamB\" class=\"col-md-12 fixture-items\">\r\n        <div class=\"col-md-5 game-div\">\r\n          <div class=\"fixture-team\">\r\n            <img *ngIf=\"game.teamAImage && game.teamAImage\" class=\"fixture-team-logo\" src=\"{{game.teamAImage}}\" alt=\"{{ game.teamA }} Logo\">\r\n\r\n            <!-- <a mat-button class=\"nav-link active\" href=\"javascript:void(0)\">\r\n            </a> -->\r\n            <h4 class=\"fixture-team-name\">{{ game.teamA }}</h4>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2 team-verses\">\r\n          <div class=\"fixture-score\">\r\n            <h4 class=\"fixture-score-text\">VS</h4>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-5 game-div\">\r\n          <div class=\"fixture-team\">\r\n            <h4 class=\"fixture-team-name\">{{ game.teamB }}</h4>\r\n            <img *ngIf=\"game.teamBImage && game.teamBImage\" class=\"fixture-team-logo\" src=\"{{game.teamBImage}}\" alt=\"{{ game.teamB }} Logo\">\r\n\r\n            <!-- <a mat-button class=\"nav-link active\" href=\"javascript:void(0)\">\r\n              <img *ngIf=\"game.teamBImage\" class=\"fixture-team-logo\" src=\"{{game.teamBImage}}\" alt=\"{{ game.teamB }} Logo\">\r\n            </a> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"!game.teamB\" class=\"col-md-12 fixture-items no-team-b\">\r\n        <!-- <div class=\"col-md-10 no-team-b\"> -->\r\n          <div class=\"fixture-team\">\r\n            <img *ngIf=\"game.teamAImage && game.teamAImage\" class=\"fixture-team-logo\" src=\"{{game.teamAImage}}\" alt=\"{{ game.teamA }} Logo\">\r\n\r\n            <!-- <a mat-button class=\"nav-link active\" href=\"javascript:void(0)\">\r\n              <img *ngIf=\"game.teamAImage\" class=\"fixture-team-logo\" src=\"{{game.teamAImage}}\" alt=\"{{ game.teamA }} Logo\">\r\n            </a> -->\r\n            <h4 class=\"fixture-team-name\">{{ game.teamA }}</h4>\r\n          </div>\r\n        <!-- </div> -->\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'product-card',\r\n  templateUrl: './product-card.component.html',\r\n  styleUrls: ['./product-card.component.css'],\r\n  providers: [DatePipe]\r\n})\r\nexport class ProductCardComponent implements OnInit {\r\n  @Input() game:any=[];\r\n  currentDate:any = new Date();\r\n  constructor(private datePipe: DatePipe) { \r\n    this.currentDate = this.datePipe.transform(this.currentDate, 'dd-MM-YYYY');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-12 sport\">\r\n        <div class=\"sport-category\">\r\n            <!-- <h3 class=\"cat-name\" *ngIf=\"data.categoryName.toLowerCase() != data.subCategory.subCategoryName.toLowerCase()\">\r\n                {{data.categoryName.toUpperCase() }} \r\n            </h3>\r\n            <i *ngIf=\"data.categoryName.toLowerCase() != data.subCategory.subCategoryName.toLowerCase()\" class=\"material-icons\">arrow_right</i> -->\r\n            <a *ngIf=\"data.subCategory.games.length > 10\" class=\"sport\" [routerLink]=\"['/fixtures/',data.categoryName,data.subCategory.subCategoryName]\">\r\n                <h3 class=\"cat-name\"> {{data.subCategory.subCategoryName }}</h3>\r\n            </a>\r\n            <a *ngIf=\"!(data.subCategory.games.length > 10)\" class=\"sport disable-atag\" [routerLink]=\"['/fixtures/',data.categoryName,data.subCategory.subCategoryName]\">\r\n                <h3 class=\"cat-name\"> {{data.subCategory.subCategoryName }}</h3>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-10\"></div>\r\n    <div class=\"col-md-2 show-all\">\r\n        <a *ngIf=\"data.subCategory.games.length > 10\" [routerLink]=\"['/fixtures/',data.categoryName,data.subCategory.subCategoryName]\" class=\"btn btn-success see-more\">view all</a>    \r\n    </div>\r\n</div>\r\n<div *ngIf=\"data.subCategory.games.length > 1\" class=\"row\">\r\n    <!-- <div class=\"row\"> -->\r\n        <div *ngFor=\"let game of data.subCategory.games.slice(0, 10)\" class=\"column\">\r\n            <a [routerLink]=\"['/fixtures/', data.categoryName, data.subCategory.subCategoryName, game.teamA + '-vs-' + game.teamB]\" target=\"_blank\">\r\n                <product-card [game]=\"game\"></product-card>\r\n            </a>\r\n        </div>\r\n      <!-- </div> -->\r\n</div>\r\n<div *ngIf=\"data.subCategory.games.length == 1\" class=\"md-col-12 one-game\">\r\n    <!-- <div class=\"row\"> -->\r\n        <div *ngFor=\"let game of data.subCategory.games.slice(0, 1)\" class=\"column\">\r\n            <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1923488996439217\"\r\n                crossorigin=\"anonymous\"></script>\r\n            <!-- Horizontal above the main content -->\r\n            <ins class=\"adsbygoogle\"\r\n                style=\"display:block\"\r\n                data-ad-client=\"ca-pub-1923488996439217\"\r\n                data-ad-slot=\"2554300823\"\r\n                data-ad-format=\"auto\"\r\n                data-full-width-responsive=\"true\"></ins>\r\n            <script>\r\n                (adsbygoogle = window.adsbygoogle || []).push({});\r\n            </script>\r\n            <a [routerLink]=\"['/fixtures/', data.categoryName, data.subCategory.subCategoryName, game.teamA + '-vs-' + game.teamB]\" target=\"_blank\">\r\n                <product-card [game]=\"game\"></product-card>\r\n            </a>\r\n        </div>\r\n      <!-- </div> -->\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n  @Input() data:any;\r\n  first:number=0;\r\n  last:number=6;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"collectionName\" class=\"col-lg-12 col-md-12 product-main-card\">\r\n    <div class=\"card header-card\">\r\n        <div class=\"card-header card-header-tabs card-header-primary\" style=\"margin-top: 24px !important; padding: 2px;\">\r\n            <div class=\"nav-tabs-navigation\">\r\n                <div class=\"nav-tabs-wrapper\">\r\n                    <ul class=\"nav nav-tabs\" data-tabs=\"tabs\">\r\n                        <li class=\"nav-item\">\r\n                            <a [routerLink]=\"['']\" mat-button class=\"nav-link\" data-toggle=\"tab\">\r\n                                <strong><i class=\"material-icons\">dehaze</i></strong>\r\n                                <div class=\"ripple-container\"></div>\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a mat-button class=\"nav-link active\" href=\"#\" data-toggle=\"tab\">\r\n                                <strong class=\"collection-text\">\r\n                                    <p class=\"title-heading\">{{ collectionName }}</p>\r\n                                </strong>\r\n                                <div class=\"ripple-container\"></div>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div *ngIf=\"!collectionName\" class=\"col-md-12\" style=\"padding-left: 0px;\">\r\n    <a href=\"#\" routerLinkActive=\"active\">\r\n        <h3 class=\"main-heading\">{{ fixture.categoryName.toUpperCase() }}</h3>\r\n    </a>\r\n</div> -->\r\n\r\n<div *ngFor=\"let subCategory of fixture.subCategories\">\r\n    <category [data]=\"{categoryName:fixture.categoryName,subCategory:subCategory}\"></category>\r\n    <hr>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProductService } from '../../services/product.service';\r\n\r\n@Component({\r\n  selector: 'collection',\r\n  templateUrl: './collection.component.html',\r\n  styleUrls: ['./collection.component.css']\r\n})\r\nexport class CollectionComponent implements OnInit {\r\n  @Input() fixture:any;\r\n  collectionName: string;\r\n\r\n  constructor(\r\n    private activeRoute:ActivatedRoute,\r\n    private productService: ProductService\r\n  ) {\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.fixture){\r\n      this.activeRoute.paramMap.subscribe(params => {\r\n        this.collectionName = params.get('collectionName');\r\n        this.productService.getAllData({collectionName:this.collectionName}).subscribe((res)=>{\r\n          this.fixture = res[0];\r\n        }); \r\n    });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 product-main-card\">\r\n                <div class=\"card header-card\">\r\n                    <mat-progress-bar\r\n                    *ngIf=\"loading\"\r\n                    [mode]=\"'indeterminate'\">\r\n                    </mat-progress-bar>\r\n                    <div class=\"card-header card-header-tabs card-header-primary\" (scroll)=\"onScroll()\" [ngClass]=\"navbarfixed?'fixed':'nofixed'\">\r\n                        <div class=\"nav-tabs-navigation\">\r\n                            <div class=\"nav-tabs-wrapper\">\r\n                                <ul class=\"nav nav-tabs\" data-tabs=\"tabs\">\r\n                                    <li class=\"vertical-middle\">\r\n                                        <i class=\"material-icons\">dehaze</i>\r\n                                    </li>\r\n                                    <li *ngFor=\"let fixture of fixtures\" routerLinkActive=\"active\" class=\"nav-item dropdown\">\r\n                                        <a class=\"nav-link\" [routerLink]=\"['/']\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <div class=\"col-bar\">\r\n                                                <p class=\"categories\">{{ fixture.categoryName }}\r\n                                                    <span><i class=\"material-icons\">arrow_drop_down</i></span>\r\n                                                </p>\r\n                                            </div>\r\n                                        </a>\r\n                                        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                            <div *ngFor=\"let subCategory of fixture.subCategories\">\r\n                                                <a [routerLink]=\"['/fixtures/',fixture.categoryName,subCategory.subCategoryName]\" class=\"dropdown-item\" href=\"javascript:void(0)\">{{subCategory.subCategoryName}}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                                        <a class=\"nav-link\" [routerLink]=\"['/news']\">\r\n                                            <div class=\"col-bar\">\r\n                                                <p class=\"categories\">  Top Stories</p>\r\n                                            </div>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"tab-content\">\r\n                            <!-- <main-slider></main-slider> -->\r\n                            <!-- <hr> -->\r\n                            <div class=\"col-md-12 home-items\">\r\n                                <div class=\"col-md-1 card card-header news-header no-web-display\">\r\n                                </div>\r\n                                <div class=\"col-md-1 card card-header news-header no-mobile-display\">\r\n                                    <div class=\"league-list\">\r\n                                        <h1 class=\"team-league-list-title\">Top Leagues</h1>\r\n                                        <div *ngFor=\"let league of leagues\" class=\"team-league-list\">\r\n                                            <a [routerLink]=\"['/fixtures/league/',league.leagueName]\">\r\n                                                <img src=\"{{ league.leagueImage }}\" onerror=\"this.src='assets/img/placeholder.jpg'\" alt=\"{{ league.leagueName }}\"/>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr>\r\n                                    <div class=\"team-list\">\r\n                                        <h1 class=\"team-league-list-title\">Top Teams</h1>\r\n                                        <div *ngFor=\"let team of teams\" class=\"team-league-list\">\r\n                                            <a [routerLink]=\"['/fixtures/team/',team.teamName]\">\r\n                                                <img src=\"{{ team.teamImage }}\" onerror=\"this.src='assets/img/placeholder.jpg'\" alt=\"{{ team.teamName }}\"/>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-9\">\r\n                                    <div class=\"tab-pane active\" id=\"all\">\r\n                                        <div class=\"text-center\">\r\n                                            <ins\r\n                                              class=\"adsbygoogle ads_resp\"\r\n                                              style=\"display: inline-block\"\r\n                                              data-ad-client=\"ca-pub-1923488996439217\"\r\n                                              data-ad-slot=\"2554300823\"\r\n                                              data-full-width-responsive=\"true\"\r\n                                            ></ins>\r\n                                        </div>\r\n                                        <div *ngFor=\"let fixture of homeFixtures; let i = index\">\r\n                                            <collection [fixture]=\"fixture\"></collection>\r\n                                            <strong><hr *ngIf=\"i + 1 === fixtures.length\" #theLastList></strong>\r\n                                            <strong><hr *ngIf=\"i + 1 != fixtures.length\"></strong>\r\n                                        </div>\r\n                                        <div class=\"col-md-10 home-details no-mobile-display\">\r\n                                            <h2 class=\"heading\"><span class=\"site-title\">Sports<span class=\"feed\">Feed</span>24</span> – A Go-To Platform to Watch Live Sports\r\n                                            </h2>\r\n                                            <div>\r\n                                              <ul class=\"nav navbar-nav\">\r\n                                                <li class=\"nav-item\">\r\n                                                    <p class=\"nav-link\">\r\n                                                        <i class=\"material-icons\">rate_review</i>\r\n                                                        <span class=\"collection\">KEY SERVICES - SPORTS FIXTURES</span>\r\n                                                    </p>\r\n                                                    <p class=\"card-description\">\r\n                                                        ON OUR HOME PAGE WE PROVIDE TODAYS FOOTBALL FIXTURES AND RESULTS\r\n                                                        WE WILL SHOW YOU FOOTBALL MATCHES TODAY FROM TOP LEAGUES ROUND THE WORLD WICH INCLUDES:\r\n                                                        PREMIER LEAGUE FIXTURES\r\n                                                        LA LIGA FIXTURES\r\n                                                        SERIE A FIXTURES\r\n                                                        BUNDESLIGA FIXTURES\r\n                                                        SUPER LIGA FIXTURES\r\n                                                        PRIMERIA LIGA\r\n                                                        WE WILL BE ADDING MORE IN THE NEAR FUTURE\r\n                                                        OUR SYSTEM IS AUTOMATED AND WILL KEEP YOU UPDATED ON DAILY FOOTBALL FIXTURES\r\n                                                        AND DAILY FOOTBALL RESULTS ON YOUR FAVOURITE FOOTBALL LEAGUE\r\n        \r\n                                                    </p>    \r\n                                                    <p class=\"nav-link\">\r\n                                                        <i class=\"material-icons\">rate_review</i>\r\n                                                        <span class=\"collection\">\r\n                                                            How to watch live football for free?\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p class=\"card-description\">\r\n                                                        Sportsfeed24 is host to live football and other sports streams. You can watch live matches of all the famous leagues, you favorite football team and \r\n                                                        experience the best free sports streaming service.\r\n                                                        You can watch live football and sports matches on you phone, computer, tablets, without any ads and without paying for the service. The live streaming of the matches\\\r\n                                                        are free and provides a great experience for the users.\r\n                                                        If you want to have a platform where you can find all the games and fixtures related to you favorite teams leagues and sports, the Sportsfeed24\r\n                                                        is go to platform. \r\n                                                    </p>                      \r\n                                                </li>\r\n                                                <li class=\"nav-item\">\r\n                                                    <p class=\"nav-link\">\r\n                                                        <i class=\"material-icons\">thumb_up</i>\r\n                                                        <span class=\"collection\">Ad-Free Live Sports Streaming</span>\r\n                                                    </p>\r\n                                                    <p class=\"card-description\">\r\n                                                        Best thing about sportsfeed24 is that it provides ad fee live streams of your favorite football matches. You can browse through football matches and other sports and ramain\r\n                                                        up to date with the fixtures and matches.\r\n                                                        It is not a good experienc when you have to watch ads in the middle of you favorite sports matches. Sportsfeed24 understands Thisand \r\n                                                        therefore take care of user experience. It provide free live streaming of sports to its users without ads.\r\n                                                    </p>     \r\n                                                </li>\r\n                                              </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!-- <div class=\"spinner-container\" *ngIf=\"lazyLoad\">\r\n                                            <mat-spinner [diameter]=\"40\"></mat-spinner>\r\n                                        </div> -->\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-2 news-column\">\r\n                                    <div *ngFor=\"let new of news; let i = index\">\r\n                                        <div class=\"card card-header news-header top-stories\">\r\n                                            <a [routerLink]=\"['/news/detail/',new.category, new._id ]\">\r\n                                                <h1 class=\"news-title\">\r\n                                                    {{new.title}}\r\n                                                </h1>\r\n                                                <img class=\"news-card-image\" src=\"{{ new.imageThumb }}\" alt=\"{{ new.title }}\">\r\n                                                <h2 class=\"news-category\">\r\n                                                    {{ new.category }}\r\n                                                </h2>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-1 card card-header news-header no-web-display\">\r\n                                    <h4 class=\"team-league-list-title\">Top Leagues</h4>\r\n                                    <div class=\"row league-list mobile-team-league-list\">\r\n                                        <div *ngFor=\"let league of leagues\" class=\"team-league-list\">\r\n                                            <a [routerLink]=\"['/fixtures/league/',league.leagueName]\" class=\"mobile-teams\">\r\n                                                <img src=\"{{ league.leagueImage }}\" onerror=\"this.src='assets/img/placeholder.jpg'\" alt=\"{{ league.leagueName }}\"/>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr>\r\n                                    <h4 class=\"team-league-list-title\">Top Teams</h4>\r\n                                    <div class=\"row team-list mobile-team-league-list\">\r\n                                        <div *ngFor=\"let team of teams\" class=\"team-league-list\">\r\n                                            <a [routerLink]=\"['/fixtures/team/',team.teamName]\" class=\"mobile-teams\">\r\n                                                <img src=\"{{ team.teamImage }}\" onerror=\"this.src='assets/img/placeholder.jpg'\" alt=\"{{ team.teamName }}\"/>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr>\r\n                            </div>\r\n                            <div class=\"col-md-12 home-items\">\r\n                                <div class=\"col-md-10\">\r\n                                    <div class=\"tab-pane active\" id=\"all\">\r\n                                        <div class=\"col-md-10 home-details no-web-display\">\r\n                                            <h2 class=\"heading\"><span class=\"site-title\">Sports<span class=\"feed\">Feed</span>24</span> – A Go-To Platform to Watch Live Sports\r\n                                            </h2>\r\n                                            <div>\r\n                                              <ul class=\"nav navbar-nav\">\r\n                                                <li class=\"nav-item\">\r\n                                                    <a class=\"nav-link\" [routerLink]=\"['/']\">\r\n                                                        <i class=\"material-icons\">rate_review</i>\r\n                                                        <span class=\"collection\">KEY SERVICES - SPORTS FIXTURES</span>\r\n                                                    </a>\r\n                                                    <p class=\"card-description\">\r\n                                                        ON OUR HOME PAGE WE PROVIDE TODAYS FOOTBALL FIXTURES AND RESULTS WE WILL SHOW\r\n                                                         YOU FOOTBALL MATCHES TODAY FROM TOP LEAGUES ROUND THE WORLD WICH INCLUDES: \r\n                                                         PREMIER LEAGUE FIXTURES LA LIGA FIXTURES SERIE A FIXTURES BUNDESLIGA FIXTURES \r\n                                                         SUPER LIGA FIXTURES PRIMERIA LIGA WE WILL BE ADDING MORE IN THE NEAR FUTURE OUR \r\n                                                         SYSTEM IS AUTOMATED AND WILL KEEP YOU UPDATED ON DAILY FOOTBALL FIXTURES AND DAILY \r\n                                                         FOOTBALL RESULTS ON YOUR FAVOURITE FOOTBALL LEAGUE\r\n        \r\n                                                    </p>    \r\n                                                    <a class=\"nav-link\" [routerLink]=\"['/']\">\r\n                                                        <i class=\"material-icons\">rate_review</i>\r\n                                                        <span class=\"collection\">\r\n                                                           How to watch live football for free?\r\n                                                        </span>\r\n                                                    </a>\r\n                                                    <p class=\"card-description\">\r\n                                                        Sportsfeed24 is host to live football and other sports streams. You can watch live matches of all the famous leagues, you favorite football team and \r\n                                                        experience the best free sports streaming service.\r\n                                                        You can watch live football and sports matches on you phone, computer, tablets, without any ads and without paying for the service. The live streaming of the matches\\\r\n                                                        are free and provides a great experience for the users.\r\n                                                        If you want to have a platform where you can find all the games and fixtures related to you favorite teams leagues and sports, the Sportsfeed24\r\n                                                        is go to platform. \r\n                                                    </p>                      \r\n                                                </li>\r\n                                                <li class=\"nav-item\">\r\n                                                    <a class=\"nav-link\" [routerLink]=\"['/']\">\r\n                                                        <i class=\"material-icons\">thumb_up</i>\r\n                                                        <span class=\"collection\">Ad-Free Live Sports Streaming</span>\r\n                                                    </a>\r\n                                                    <p class=\"card-description\">\r\n                                                        Best thing about sportsfeed24 is that it provides ad fee live streams of your favorite football matches. You can browse through football matches and other sports and ramain\r\n                                                        up to date with the fixtures and matches.\r\n                                                        It is not a good experienc when you have to watch ads in the middle of you favorite sports matches. Sportsfeed24 understands Thisand \r\n                                                        therefore take care of user experience. It provide free live streaming of sports to its users without ads.\r\n                                                    </p>\r\n                                                </li>\r\n                                              </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!-- <div class=\"spinner-container\" *ngIf=\"lazyLoad\">\r\n                                            <mat-spinner [diameter]=\"40\"></mat-spinner>\r\n                                        </div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, HostListener, ViewChildren, ElementRef, QueryList, AfterViewInit, Inject} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from '../services/product.service';\r\n\r\ndeclare interface Window {\r\n  adsbygoogle: any[];\r\n}\r\ndeclare var adsbygoogle: any[];\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit {\r\n  @ViewChildren('theLastList',{read:ElementRef})\r\n  theLastList:QueryList<ElementRef>;\r\n  // products:any=[];\r\n  // allData:any=[];\r\n  fixtures:any=[];\r\n  // productCollections:any=[];\r\n  loading:boolean=false;\r\n  lazyLoad:boolean=false;\r\n  navbarfixed:boolean=false;\r\n  skip:number=0;\r\n  limit:number=2;\r\n  totalCollections:number=0;\r\n  observer:any;\r\n  news:any = [];\r\n  teams:any= [];\r\n  leagues:any= [];\r\n  homeFixtures: any = [];\r\n\r\n  constructor(\r\n    private productService:ProductService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  @HostListener('window:scroll',[]) onScroll(){\r\n    if(window.scrollY > 100){\r\n      this.navbarfixed = true;\r\n    }else{\r\n      this.navbarfixed = false;\r\n    }\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.instersectionObserver();\r\n    this.getFixtures();\r\n    this.productService.getdbLeagues().subscribe((res:any)=>{\r\n      this.leagues = res;\r\n    });\r\n    this.productService.getdbTeams().subscribe((res:any)=>{\r\n      this.teams = res;\r\n    });\r\n    // this.productService.getTopLeagues().subscribe((res:any)=>{\r\n    //   this.leagues = res;\r\n    // });\r\n    this.productService.getAllNews({trending: true}).subscribe((res:any)=>{\r\n      this.news = res;\r\n    }); \r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      try {\r\n        (window[\"adsbygoogle\"] = window[\"adsbygoogle\"] || []).push({});\r\n      } catch (e) {\r\n        console.error(\"ads\", e);\r\n      }\r\n    }, 900);\r\n\r\n    this.theLastList.changes.subscribe((d)=>{\r\n      if(d.last) this.observer.observe(d.last.nativeElement);\r\n    });\r\n  }\r\n\r\n  getFixtures(){\r\n    this.loading = true;\r\n    this.productService.getFixtures().subscribe((res:any)=>{\r\n      this.totalCollections = res.length;\r\n      this.fixtures = res;\r\n      this.homeFixtures = [res[0]];\r\n      this.loading = false;\r\n      this.lazyLoad=false;\r\n    }); \r\n  }\r\n\r\n  instersectionObserver(){\r\n    let options = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 1\r\n    }\r\n\r\n    this.observer = new IntersectionObserver((entries)=>{\r\n      if(entries[0].isIntersecting){\r\n        if(this.skip < this.totalCollections){\r\n          this.lazyLoad=true;\r\n          this.getFixtures();\r\n        }else{\r\n          this.lazyLoad=false;\r\n        }\r\n      }\r\n\r\n\r\n    }, options);\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n          <div class=\"col-lg-12 col-md-12 product-main-card\">\r\n              <div class=\"card\">\r\n                <mat-progress-bar *ngIf=\"loading\" [mode]=\"'indeterminate'\"></mat-progress-bar>\r\n                  <div class=\"card-header card-header-tabs card-header-primary\"  (scroll)=\"onScroll()\" [ngClass]=\"navbarfixed?'fixed':'nofixed'\">\r\n                      <div class=\"nav-tabs-navigation\">\r\n                          <div class=\"nav-tabs-wrapper\">\r\n                              <ul class=\"nav nav-tabs\" data-tabs=\"tabs\">\r\n                                <li class=\"nav-item\">\r\n                                    <a [routerLink]=\"['']\" mat-button class=\"nav-link\" data-toggle=\"tab\">\r\n                                        <strong><i class=\"material-icons\">dehaze</i></strong>\r\n                                        <div class=\"ripple-container\"></div>\r\n                                    </a>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <a mat-button class=\"nav-link active\" href=\"#category\" data-toggle=\"tab\">\r\n                                        <strong class=\"collection-text\" *ngIf=\"!searchQuery && collection\">{{ collection }}<i class=\"material-icons\">arrow_right</i></strong>\r\n                                        <span class=\"collection-text\" *ngIf=\"!searchQuery\"><strong>{{ category }}</strong></span>\r\n                                        <strong *ngIf=\"searchQuery\">Search Results for \"{{ searchQuery }}\"</strong>\r\n                                        <div class=\"ripple-container\"></div>\r\n                                    </a>\r\n                                </li>\r\n                              </ul>\r\n                              <!-- <app-search></app-search> -->\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                      <div class=\"tab-content\">\r\n                        <div *ngIf=\"!loading\" class=\"tab-pane active\" id=\"category\">\r\n                            <h3 *ngIf=\"category\" class=\"cat-name\">{{ category }}</h3>  \r\n                            <div *ngIf=\"league?.games?.length === 1\" class=\"col-md-12 one-game\">\r\n                                <div *ngFor=\"let game of league.games\" class=\"column\">\r\n                                    <a [routerLink]=\"['/fixtures/', collection, category, game.teamA + '-vs-' + game.teamB]\">\r\n                                        <product-card [game]=\"game\"></product-card>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1923488996439217\"\r\n                                    crossorigin=\"anonymous\"></script>\r\n                                <!-- Horizontal above the main content -->\r\n                                <ins class=\"adsbygoogle\"\r\n                                    style=\"display:block\"\r\n                                    data-ad-client=\"ca-pub-1923488996439217\"\r\n                                    data-ad-slot=\"2554300823\"\r\n                                    data-ad-format=\"auto\"\r\n                                    data-full-width-responsive=\"true\"></ins>\r\n                                <script>\r\n                                    (adsbygoogle = window.adsbygoogle || []).push({});\r\n                                </script>\r\n                            </div>  \r\n                            <div *ngIf=\"league?.games?.length > 1\" class=\"row\">\r\n                                <div *ngFor=\"let game of league.games\" class=\"column\">\r\n                                    <a [routerLink]=\"['/fixtures/', collection, category, game.teamA + '-vs-' + game.teamB]\" target=\"_blank\">\r\n                                        <product-card [game]=\"game\"></product-card>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <hr>\r\n                            <div class=\"row\">\r\n                                <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1923488996439217\"\r\n                                    crossorigin=\"anonymous\"></script>\r\n                                <!-- Horizontal above the main content -->\r\n                                <ins class=\"adsbygoogle\"\r\n                                    style=\"display:block\"\r\n                                    data-ad-client=\"ca-pub-1923488996439217\"\r\n                                    data-ad-slot=\"2554300823\"\r\n                                    data-ad-format=\"auto\"\r\n                                    data-full-width-responsive=\"true\"></ins>\r\n                                <script>\r\n                                    (adsbygoogle = window.adsbygoogle || []).push({});\r\n                                </script>\r\n                            </div>\r\n                            <hr>\r\n                            <div *ngIf=\"!(league?.games?.length > 0) && !loading\" class=\"row\">\r\n                                <p class=\"not-found\">No Product Found</p>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProductService } from '../services/product.service';\r\n\r\n@Component({\r\n  selector: 'products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\n\r\nexport class ProductsComponent implements OnInit {\r\n  products: any=[];\r\n  subCategories:any=[];\r\n  subProducts:any=[];\r\n  category:string='';\r\n  collection:string;\r\n  searchQuery:string;\r\n  loading:boolean=false;\r\n  inputText: string = 'Hi...have a nice day - message from parent';\r\n  @Input('rating') private rating: number = 3.5;\r\n  @Input('starCount') private starCount: number = 5;\r\n  @Input('color') private color: string = 'accent';\r\n  @Output() private ratingUpdated = new EventEmitter();\r\n  navbarfixed:boolean=false;\r\n  league: any = {};\r\n\r\n  @HostListener('window:scroll',['$event']) onScroll(){\r\n    if(window.scrollY > 100){\r\n      this.navbarfixed = true;\r\n    }else{\r\n      this.navbarfixed = false;\r\n    }\r\n  }\r\n\r\n  private ratingArr = [];\r\n\r\n  constructor(\r\n    private productService:ProductService,\r\n    private activeRoute:ActivatedRoute,\r\n  ) {\r\n   }\r\n  \r\n  ngOnInit() {\r\n    for (let index = 0; index < this.starCount; index++) {\r\n      this.ratingArr.push(index);\r\n    }\r\n\r\n    this.activeRoute.queryParams.subscribe(params => {\r\n      if(params.search){\r\n        this.loading = true;\r\n        this.searchQuery = params.search;\r\n        this.productService.searchProducts({'searchText':params.search}).subscribe((products:any)=>{\r\n          this.products = products;\r\n          this.loading = false;\r\n      });\r\n      }else{\r\n        this.activeRoute.paramMap.subscribe(params => {\r\n          this.loading = true;\r\n            this.category = params.get('category');\r\n            this.collection = params.get('collection');\r\n            let filter ={\r\n              category: this.collection,\r\n              league:this.category\r\n            }\r\n            this.productService.getGamesByLeague(filter).subscribe((res)=>{\r\n              this.loading = false;\r\n              this.league = res;\r\n              // this.products = res.products[0].products;\r\n              // this.subCategories = res.products[0].subCategories;\r\n              // this.subProducts = res.subProducts;\r\n            }); \r\n        });\r\n      }\r\n    }\r\n  ); \r\n  }\r\n  showIcon(rating:number, index:number) {\r\n    if (Math.round(rating) >= index + 1) {\r\n      return 'star';\r\n    } else {\r\n      return 'star_border';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"fixture-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Popular Teams</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let topTeam of topTeams\">\r\n                        <td (click)=\"replaceFixture(topTeam.teamName)\" class=\"top-teams-list\">\r\n                            <img class=\"fixture-team-logo\" src=\"{{ topTeam.teamImage }}\" alt=\"{{ topTeam.teamName }}\"/>\r\n                            <p mat-button class=\"top-team\">\r\n                                {{ topTeam.teamName }}\r\n                            </p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col-lg-8 col-md-8\">\r\n            <div *ngIf=\"team && showTeam\">\r\n                <div class=\"card header-card\">\r\n                    <mat-progress-bar\r\n                    *ngIf=\"loading\"\r\n                    [mode]=\"'indeterminate'\">\r\n                    </mat-progress-bar>\r\n                    <div class=\"card-header card-header-tabs\">\r\n                        <div *ngIf=\"team.fixtures\" class=\"game\">\r\n                            <img  class=\"game-logo\" src=\"{{ team.teamImage }}\" alt=\"{{ team?.teamName }}-logo\"/>\r\n                            <h4 class=\"game-title\">{{ team?.teamName?.toUpperCase() }} Fixtures</h4>\r\n                        </div>\r\n                        <div class=\"ripple-container\"></div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <!-- <div class=\"container\"> -->\r\n                            <div class=\"row\">\r\n                                <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1923488996439217\"\r\n                                    crossorigin=\"anonymous\"></script>\r\n                                <!-- Horizontal above the main content -->\r\n                                <ins class=\"adsbygoogle\"\r\n                                    style=\"display:block\"\r\n                                    data-ad-client=\"ca-pub-1923488996439217\"\r\n                                    data-ad-slot=\"2554300823\"\r\n                                    data-ad-format=\"auto\"\r\n                                    data-full-width-responsive=\"true\"></ins>\r\n                                <script>\r\n                                    (adsbygoogle = window.adsbygoogle || []).push({});\r\n                                </script>\r\n                            </div>\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Match Date</th>\r\n                                        <th>Team A</th>\r\n                                        <th>Match Time</th>\r\n                                        <th>Team B</th>\r\n                                        <th>Link</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let fix of team.fixtures\" (click)=\"getGameFixture(fix)\">\r\n                                        <td>\r\n                                            <!-- <a mat-button class=\"nav-link live-link\" [routerLink]=\"['/teamFixture/',JSON.stringify(fix)]\"> -->\r\n                                                {{ fix['fixtureDate'] }}\r\n                                            <!-- </a> -->\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <!-- <a mat-button class=\"nav-link live-link\" [routerLink]=\"['/teamFixture/', JSON.stringify(fix)]\"> -->\r\n                                                {{ fix['teamA'] }}\r\n                                            <!-- </a> -->\r\n                                        </td>\r\n                                        \r\n                                        <td>\r\n                                            <!-- <a mat-button class=\"nav-link live-link\" [routerLink]=\"['/teamFixture/',JSON.stringify(fix)]\"> -->\r\n                                                {{ fix['fixtureTime'] }}\r\n                                            <!-- </a> -->\r\n                                        </td>\r\n                                        <td>\r\n                                            <!-- <a [routerLink]=\"['/teamFixture/',JSON.stringify(fix)]\"> -->\r\n                                                {{ fix['teamB'] }}\r\n                                            <!-- </a> -->\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <a mat-button class=\"nav-link live-link\" href=\"javascript:void(0)\">\r\n                                                Watch live\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div *ngIf=\"!team?.fixtures?.length > 0\">\r\n                                <p class=\"not-found\">No fixtures found</p>\r\n                            </div>\r\n\r\n                            <div *ngIf=\"details.length > 0\" class=\"home-details\">\r\n                                <div class=\"details\">\r\n                                    <h2 class=\"detail-heading\">\r\n                                        <span class=\"detail-title\">{{ team?.teamName?.toUpperCase() }} - </span>\r\n                                        INSIGHTS\r\n                                    </h2>\r\n                                    <p *ngFor=\"let paragraph of details\" class=\"card-description\">\r\n                                        {{ paragraph }}\r\n                                    </p> \r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"league && !showTeam\">\r\n                <div class=\"card header-card\">\r\n                    <mat-progress-bar\r\n                    *ngIf=\"loading\"\r\n                    [mode]=\"'indeterminate'\">\r\n                    </mat-progress-bar>\r\n                    <div class=\"card-header card-header-tabs\">\r\n                        <div *ngIf=\"league.fixtures\" class=\"game\">\r\n                            <img  class=\"game-logo\" src=\"{{ league.leagueImage }}\" alt=\"{{ league?.leagueName }}-logo\"/>\r\n                            <h4 class=\"game-title\">{{ league.leagueName.toUpperCase() }} Fixtures</h4>\r\n                        </div>\r\n                        <div class=\"ripple-container\"></div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Match Date</th>\r\n                                    <th>Team A</th>\r\n                                    <th>Match Time</th>\r\n                                    <th>Team B</th>\r\n                                    <th>Link</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let fix of league.fixtures\" (click)=\"getGameFixture(fix)\">\r\n                                    <td>{{ fix['fixtureDate'] }}</td>\r\n                                    <td>{{ fix['teamA'] }}</td>\r\n                                    <td>{{ fix['fixtureTime'] }}</td>\r\n                                    <td>{{ fix['teamB'] }}</td>\r\n                                    <td>\r\n                                        <a mat-button class=\"nav-link live-link\" href=\"javascript:void(0)\">\r\n                                            Watch live\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div *ngIf=\"!league.fixtures.length > 0\">\r\n                            <p class=\"not-found\">No fixtures found</p>\r\n                        </div>\r\n                        <div *ngIf=\"details.length > 0\" class=\"home-details\">\r\n                            <div class=\"details\">\r\n                                <h2 class=\"detail-heading\">\r\n                                    <span class=\"detail-title\">{{ league.leagueName.toUpperCase() }} - </span>\r\n                                    INSIGHTS\r\n                                </h2>\r\n                                <p *ngFor=\"let paragraph of details\" class=\"card-description\">\r\n                                    {{ paragraph }}\r\n                                </p> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Popular Leagues</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let topLeague of topLeagues\">\r\n                        <td (click)=\"replaceLeague(topLeague.leagueName)\" class=\"top-teams-list\">\r\n                            <img class=\"fixture-team-logo\" src=\"{{ topLeague.leagueImage }}\" alt=\"{{ topLeague.leagueName }}-logo\"/>\r\n                            <p mat-button class=\"top-team\">\r\n                                {{ topLeague.leagueName }}\r\n                            </p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../services/product.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\ninterface Fixture {\r\n  fixtureDate: string;\r\n  TeamA: string;\r\n  fixtureTime: string,\r\n  teamB: string,\r\n  fixtureLink: string\r\n}\r\n\r\n@Component({\r\n  selector: 'fixtures',\r\n  templateUrl: './fixtures.component.html',\r\n  styleUrls: ['./fixtures.component.css']\r\n})\r\nexport class FixturesComponent implements OnInit {\r\n  loading:boolean = false;\r\n  team:any = {};\r\n  teamName: string;\r\n  topTeams: any = [];\r\n  league:any = {};\r\n  leagueName: string;\r\n  topLeagues: any = [];\r\n  showTeam: boolean = true;\r\n  details: any = [];\r\n  constructor(\r\n    private productService:ProductService,\r\n    private activeRoute: ActivatedRoute,\r\n    private router: Router\r\n    ) {\r\n    this.activeRoute.params.subscribe(val => {\r\n      this.teamName = val.teamName;\r\n      this.leagueName = val.leagueName;\r\n    });\r\n   }\r\n\r\n    ngOnInit(): void {\r\n      this.loading = true;\r\n      this.productService.getTopGames().subscribe((teams:any)=>{\r\n        this.topTeams = teams;\r\n      });\r\n      this.productService.getTopLeagues().subscribe((leagues:any)=>{\r\n        this.topLeagues = leagues;\r\n      });\r\n      if(this.teamName){\r\n        const filter = {\r\n          teamName: this.teamName\r\n        }\r\n        this.productService.getTeamFixtures(filter).subscribe((res:any)=>{\r\n          this.team = res;\r\n        });\r\n        this.getTeamLeagueDescription({name: this.teamName, isTeam: true});\r\n      }\r\n      if(this.leagueName){\r\n        const Leaguefilter = {\r\n          leagueName: this.leagueName\r\n        }\r\n        this.productService.getLeagueFixtures(Leaguefilter).subscribe((res:any)=>{\r\n          this.league = res;\r\n          this.showTeam = false;\r\n        });\r\n        this.getTeamLeagueDescription({name: this.leagueName, isTeam: false});\r\n      }\r\n      // if(this.leagueName) {\r\n      //   this.league = this.topLeagues.find(league => {\r\n      //     return league.leagueName === this.leagueName;\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    getTeamLeagueDescription = (filter) => {\r\n      this.productService.getDescription(filter).subscribe((description:any)=>{\r\n        let paragraphs = description?.split('\\n\\n') //split up\r\n        this.details = paragraphs ?? [];\r\n        this.loading = false;\r\n      });\r\n    }\r\n    \r\n    replaceFixture = (teamName) =>{\r\n      if (this.team.teamName != teamName) {\r\n        this.team = this.topTeams.find(team => {\r\n          return team.teamName === teamName;\r\n        });\r\n      }\r\n      this.getTeamLeagueDescription({name: teamName, isTeam: true});\r\n      this.showTeam = true;\r\n    }\r\n\r\n    replaceLeague = (leagueName) =>{\r\n      this.league = this.topLeagues.find(league => {\r\n        return league.leagueName === leagueName;\r\n      });\r\n      this.getTeamLeagueDescription({name: leagueName, isTeam: false});\r\n      this.showTeam = false;\r\n    }\r\n\r\n    getGameFixture = (fixture) => {\r\n      this.router.navigate(['/fixtures/teamFixture'], {\r\n        state: {\r\n          fixture: JSON.stringify(fixture),\r\n        },\r\n   });\r\n    }\r\n}\r\n","<div class=\"row match-container\">\r\n    <div class=\"col-md-2\">\r\n        <div *ngFor=\"let new of newsColumn1\" class=\"col-md-12 no-mobile-display\">\r\n            <div class=\"card card-header news-header\">\r\n                <a [routerLink]=\"['/news/detail/',new.category, new._id ]\">\r\n                    <h4 class=\"news-title\">\r\n                        {{new.title}}\r\n                    </h4>\r\n                    <img src=\"{{ new.imageThumb }}\" alt=\"{{ new.title }}\">\r\n                    <h4 class=\"news-category\">\r\n                        {{ new.category }}\r\n                    </h4>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"data.game\" class=\"col-lg-8 col-md-8\">\r\n        <div >\r\n            <div class=\"card header-card\">\r\n                <mat-progress-bar\r\n                *ngIf=\"loading\"\r\n                [mode]=\"'indeterminate'\">\r\n                </mat-progress-bar>\r\n                <div class=\"card-header card-header-tabs\">\r\n                    <div class=\"ripple-container\"></div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"card card-stats\">\r\n                        <div class=\"fixture-detail\">\r\n                            <h4 class=\"category\" >{{ data.subCategoryName }}</h4>\r\n                        </div>\r\n                        <div class=\"fixture-card\">\r\n                            <div class=\"fixture-body\">\r\n                                <div class=\"fixture-header\">\r\n                                    <h3 class=\"fixture-date-value\">\r\n                                        <span class=\"time-date-icon\"><i class=\"material-icons date-icon\">date_range</i></span> \r\n                                        {{ currentDate }}\r\n                                    </h3>\r\n\r\n                                    <h4 *ngIf=\"counter\" class=\"fixture-time-value\">{{ counter }}</h4>\r\n                                    <h4 *ngIf=\"!counter && data?.game?.streamerLinks?.length === 0 && specialDateTime\" class=\"fixture-time-value\">\r\n                                        <span class=\"time-date-icon\"><i class=\"material-icons time-icon\">access_time</i></span>\r\n                                        {{ specialDateTime | date:'longTime' }}\r\n                                    </h4>\r\n                                    <!-- JUST FOR ASHES -->\r\n                                    <h4 *ngIf=\"data.subCategoryName === 'Ashes | 2nd TEST(AUS leads 1-0)' && !specialDateTime && !counter && data?.game?.streamerLinks?.length === 0\" class=\"fixture-time-value\">\r\n                                        <span class=\"time-date-icon\"><i class=\"material-icons time-icon\">access_time</i></span>\r\n                                        {{ data.game.matchTime}}\r\n                                    </h4>\r\n                                    <!-- JUST FOR ASHES CLOSE -->\r\n                                    <h4 *ngIf=\"!(data.subCategoryName === 'Ashes | 2nd TEST(AUS leads 1-0)') && !specialDateTime && !counter && data?.game?.streamerLinks?.length === 0\" class=\"fixture-time-value\">\r\n                                        <span class=\"time-date-icon\"><i class=\"material-icons time-icon\">access_time</i></span>\r\n                                        {{ data.game.matchTime | date:'longTime' }}\r\n                                    </h4>\r\n                                </div>\r\n                                <div class=\"col-md-12 game\">\r\n                                    <div *ngIf=\"data.game.teamB\" class=\"col-md-4 game\">\r\n                                        <div *ngIf=\"data.game.teamB\" class=\"fixture-images\">\r\n                                            <img *ngIf=\"data.game.teamAImage\"  class=\"game-logo\" src=\"{{ data.game.teamAImage }}\" alt=\"{{ data.game.teamA }} Logo\"/>\r\n                                            <h4 class=\"game-title\">{{ data.game.teamA }}</h4>\r\n                                        </div>\r\n                                        <div *ngIf=\"!data.game.teamB\" class=\"fixture-images no-teamB\">\r\n                                            <img *ngIf=\"data.game.teamAImage\"  class=\"game-logo\" src=\"{{ data.game.teamAImage }}\" alt=\"{{ data.game.teamA }} Logo\"/>\r\n                                            <h4 class=\"game-title\">{{ data.game.teamA }}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"!data.game.teamB\" class=\"col-md-10 game\">\r\n                                        <div *ngIf=\"data.game.teamB\" class=\"fixture-images\">\r\n                                            <img *ngIf=\"data.game.teamAImage\"  class=\"game-logo\" src=\"{{ data.game.teamAImage }}\" alt=\"{{ data.game.teamA }} Logo\"/>\r\n                                            <h4 class=\"game-title\">{{ data.game.teamA }}</h4>\r\n                                        </div>\r\n                                        <div *ngIf=\"!data.game.teamB\" class=\"fixture-images\">\r\n                                            <img *ngIf=\"data.game.teamAImage\"  class=\"game-logo\" src=\"{{ data.game.teamAImage }}\" alt=\"{{ data.game.teamA }} Logo\"/>\r\n                                            <h4 class=\"game-title\">{{ data.game.teamA }}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"data.game.teamB\"  class=\"col-md-4 game\">\r\n                                        <div *ngIf=\"data.subCategoryName === 'Ashes | 2nd TEST(AUS leads 1-0)'\" class=\"time-verses\">\r\n                                            <h4 class=\"verses\">VS</h4>\r\n                                        </div>\r\n                                        <div *ngIf=\"!(data.subCategoryName === 'Ashes | 2nd TEST(AUS leads 1-0)')\" class=\"time-verses\">\r\n                                            <h4 *ngIf=\"(!matchFinished && counter)\" class=\"verses\">VS</h4>\r\n                                            <h2 *ngIf=\"!matchFinished && !counter && (data?.game?.streamerLinks?.length > 0)\" class=\"fixture-time-value\"> LIVE</h2>\r\n                                            <h3 *ngIf=\"matchFinished\" class=\"fixture-time-value match-finished-text\">MATCH FINISHED</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"data.game.teamB\" class=\"col-md-4 game\">\r\n                                        <div class=\"fixture-images\">\r\n                                            <img *ngIf=\"data.game.teamBImage\"  class=\"game-logo\" src=\"{{ data.game.teamBImage }}\" alt=\"{{ data.game.teamB }} Logo\"/>\r\n                                            <h4 class=\"game-title\">{{ data.game.teamB }}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"text-center\">\r\n                            <ins\r\n                              class=\"adsbygoogle ads_resp\"\r\n                              style=\"display: inline-block\"\r\n                              data-ad-client=\"ca-pub-1923488996439217\"\r\n                              data-ad-slot=\"2554300823\"\r\n                              data-full-width-responsive=\"true\"\r\n                            ></ins>\r\n                        </div>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Source</th>\r\n                                <th>Channel</th>\r\n                                <th>Language</th>\r\n                                <th>Cross-platform</th>\r\n                                <th>Quality</th>\r\n                                <th>Link</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr (click)=\"navigateLink(link.websiteLink)\" *ngFor=\"let link of data.game.streamerLinks\">\r\n                                <td class=\"stremer-link\">{{ link.streamer }}</td>\r\n                                <td class=\"streamer-site\">\r\n                                    <a class=\"channel-link\" href=\"javascript:void(0)\">\r\n                                        {{ link.website }}\r\n                                    </a>\r\n                                </td>\r\n                                <td class=\"language\">{{ link.language }}</td>\r\n                                <td class=\"cross-platform\">Yes</td>\r\n                                <td class=\"quality\">HD</td>\r\n                                <td class=\"stream\">\r\n                                    <a class=\"btn btn-primary live-link\" href=\"javascript:void(0)\">\r\n                                        Watch Live\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div class=\"col-md-12 no-mobile-display\">\r\n                        <div *ngIf=\"data.subCategoryName === 'Ashes | 2nd TEST(AUS leads 1-0)'\" class=\"ashes-blog\">\r\n                            <img src=\"https://res.cloudinary.com/dp7udccyf/image/upload/v1687694258/Ashes-image_r4mcvy.webp\" alt=\"Ashes-England-VS-Australia\">\r\n                            <h2>Watch Ashes 2023 online: live stream the cricket Test series</h2>\r\n                            <p class=\"page-details\">\r\n                                The highly anticipated cricket showdown of the year has arrived, capturing the attention of fervent fans across the globe who are eagerly seeking out the optimal means to stream the Ashes. \r\n                               <strong>SportsFeed24</strong> provides the opportunity to watch Ashes 2023 live streams free, no matter where you are in the world. If you won't be near your usual TV setup but still want to watch The Ashes, SportsFees24 is the best platform to stream the live matches of Ashes 2023 online. Stream every Test live and free on Sportsfeed24, and never miss a minute of the action!\r\n                            </p>\r\n                            <h3>Men’s Ashes 2023 Live Streaming: </h3>\r\n                            <p class=\"page-details\">The Men's Ashes 2023, slated to take place in England, is scheduled to run from June 16 to July 27. This thrilling series will also serve as a crucial component of the 2023-2025 World Test Championship. The five venues will be Edgbaston, Lord’s, Headingley, Old Trafford and The Oval.</p>\r\n                            <h3>What is the Ashes cricket series and what makes it significant in the world of cricket?</h3>\r\n                            <p class=\"page-details\">The Ashes is a cricket series played between fierce rivals England and Australia. This year, England is hosting the series. The Ashes is a Test cricket contest that has a long-standing history and is highly anticipated by fans of both teams.\r\n                                In an Ashes series, there are usually five cricket matches played. Out of the previous series, Australia has won 34 times, while England has emerged victorious 32 times. There have been six series that ended in a tie, where neither team could claim a clear win.\r\n                            </p>\r\n                            <h3>Which players are part of England's team for the Ashes series?</h3>\r\n                            <p class=\"page-details\">\r\n                                In the first Test of the Ashes series, the England team consists of the following players: \r\n                                Ben Duckett, Zak Crawley, Ollie Pope, Joe Root, Harry Brook, Ben Stokes (captain), Jonny Bairstow (wicketkeeper), Moeen Ali, Stuart Broad, Ollie Robinson, James Anderson. It's worth noting that Jack Leach has unfortunately been sidelined due to injury, but Moeen Ali has stepped in as a spin option for the team.\r\n                            </p>\r\n                            <h3>Which Players are part of Australia’s team for the Ashes series?</h3>\r\n                            <p class=\"page-details\">In the upcoming Ashes series, Pat Cummins is the captain of the Australian team, and Steve Smith is the vice-captain. \r\n                                Other players joining the Australian team in England include Alex Carey as the wicketkeeper, along with Scott Boland, Cameron Green, Marcus Harris, Josh Hazlewood, Travis Head, Josh Inglis, Usman Khawaja, Marnus Labuschagne, Nathan Lyon, Mitchell Marsh, Todd Murphy, Matt Renshaw, Mitchell Starc, and David Warner.\r\n                            </p>\r\n                            <h3>Which team is favored to win the Ashes 2023 series?</h3>\r\n                            <p class=\"page-details\">Both teams in this legendary rivalry, Australia and England, enter the Ashes series with strong momentum. Australia is expected to have the upper hand in the 2023 Ashes series as they have won four out of the last five series, including the most recent three. They have held the top spot in the world rankings since January 2022, with their only setback being a 2-1 series loss to India in the Border Gavaskar series earlier this year, which temporarily cost them the No. 1 position.</p>\r\n                        </div>\r\n                        <div class=\"general-blog\">\r\n                            <p class=\"page-details\">LINKS WILL BE AVAILABEL BEFORE 1 HOUR OF THE STARTING TIME. STAY TUNED...</p>\r\n                            <p class=\"page-details\">MEANWHILE YOU CAN EXPLORE OTHER FIXTURES OF TEAMS AND LEAGUES AND WHEN THE MATCHES WILL BE PLAYED</p>\r\n                            <p class=\"page-details\"> <span class=\"site-title details\">SPORTS<span class=\"feed\">FEED</span>24</span>  provides links and information about streaming live soccer matches on your laptop, iphone, tablet, android or macbook is now easily possible using our website anywhere round the world and just because your local pub doesn't have live sports doesn't mean you can't still sit at the bar with a cold pint and watch the game \r\n    \r\n                                streaming soccer matches is now possible anywhere and anytime we want to. This means we can watch the games on our phone, tablet or macbook and even cast it to our tv if we want to!\r\n                                Soccer is one of the most popular sports in the world. For people who are not able \r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"!data.game\">\r\n                        <p class=\"not-found\">No fixtures found</p>\r\n                    </div>\r\n                    <!-- <div *ngIf=\"!(data?.game?.streamerLinks?.length > 0)\" class=\"row\">\r\n                        <div *ngFor=\"let new of news\" class=\"news-column\">\r\n                            <div class=\"card card-header news-header\">\r\n                                <h4 class=\"news-title\">\r\n                                    {{new.title}}\r\n                                </h4>\r\n                                <img src=\"{{ new.image }}\" alt=\"{{ new.title }}\">\r\n                                <h4 class=\"news-category\">\r\n                                    {{ new.category }}\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"fixture\" class=\"col-lg-8 col-md-8\">\r\n        <div>\r\n            <div class=\"card header-card\">\r\n                <mat-progress-bar\r\n                *ngIf=\"loading\"\r\n                [mode]=\"'indeterminate'\">\r\n                </mat-progress-bar>\r\n                <div class=\"card-header card-header-tabs\">\r\n                    <div class=\"ripple-container\"></div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"card card-stats\">\r\n                        <div class=\"fixture-card\">\r\n                            <div class=\"fixture-body\">\r\n                                <div class=\"col-md-12 fh\">\r\n                                    <div class=\"col-md-4\">\r\n                                        <h3 class=\"fixture-date-value\">\r\n                                            <span class=\"time-date-icon\"><i class=\"material-icons date-icon\">date_range</i></span> \r\n                                            {{ fixture.fixtureDate }}\r\n                                        </h3>\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <h4 *ngIf=\"counter\" class=\"fixture-time-value no-margin\">{{ counter }}</h4>\r\n                                        <h4 *ngIf=\"!counter && fixture?.streamerLinks?.length === 0\" class=\"fixture-time-value\">\r\n                                            <span class=\"time-date-icon\"><i class=\"material-icons time-icon\">access_time</i></span>\r\n                                            {{ fixture.fixtureTime }}\r\n                                        </h4>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"fixture\" class=\"col-md-12 game margin-game\">\r\n                                    <div *ngIf=\"fixture.teamB\" class=\"fixture-images\">\r\n                                        <h4 class=\"game-title\">{{ fixture.teamA }}</h4>\r\n                                    </div>\r\n                                    <div *ngIf=\"!fixture.teamB\" class=\"fixture-images no-teamB\">\r\n                                        <h4 class=\"game-title\">{{ fixture.teamA }}</h4>\r\n                                    </div>\r\n                                    <div class=\"time-verses\">\r\n                                        <h4 *ngIf=\"fixture.teamB && !(fixture?.streamerLinks?.length > 0)  && !matchFinished\" class=\"verses\">VS</h4>\r\n                                        <h2 *ngIf=\"!counter && fixture?.streamerLinks?.length > 0 && !matchFinished\" class=\"fixture-time-value\"> LIVE</h2>\r\n                                        <h3 *ngIf=\"matchFinished\"  class=\"fixture-time-value match-finished-text\">MATCH FINISHED</h3>\r\n                                    </div>\r\n                                    <div *ngIf=\"fixture.teamB\" class=\"fixture-images\">\r\n                                        <h4 class=\"game-title\">{{ fixture.teamB }}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"col-md-12 no-mobile-display\" *ngIf=\"fixture\">\r\n                            <div *ngIf=\"data.subCategoryName === 'Ashes | 2nd TEST(AUS leads 1-0)'\" class=\"ashes-blog\">\r\n                                <img src=\"https://res.cloudinary.com/dp7udccyf/image/upload/v1687694258/Ashes-image_r4mcvy.webp\" alt=\"Ashes-England-VS-Australia\">\r\n                                <h2>Watch Ashes 2023 online: live stream the cricket Test series</h2>\r\n                                <p class=\"page-details\">\r\n                                    The highly anticipated cricket showdown of the year has arrived, capturing the attention of fervent fans across the globe who are eagerly seeking out the optimal means to stream the Ashes. \r\n                                   <strong>SportsFeed24</strong> provides the opportunity to watch Ashes 2023 live streams free, no matter where you are in the world. If you won't be near your usual TV setup but still want to watch The Ashes, SportsFees24 is the best platform to stream the live matches of Ashes 2023 online. Stream every Test live and free on Sportsfeed24, and never miss a minute of the action!\r\n                                </p>\r\n                                <h3>Men’s Ashes 2023 Live Streaming: </h3>\r\n                                <p class=\"page-details\">The Men's Ashes 2023, slated to take place in England, is scheduled to run from June 16 to July 27. This thrilling series will also serve as a crucial component of the 2023-2025 World Test Championship. The five venues will be Edgbaston, Lord’s, Headingley, Old Trafford and The Oval.</p>\r\n                                <h3>What is the Ashes cricket series and what makes it significant in the world of cricket?</h3>\r\n                                <p class=\"page-details\">The Ashes is a cricket series played between fierce rivals England and Australia. This year, England is hosting the series. The Ashes is a Test cricket contest that has a long-standing history and is highly anticipated by fans of both teams.\r\n                                    In an Ashes series, there are usually five cricket matches played. Out of the previous series, Australia has won 34 times, while England has emerged victorious 32 times. There have been six series that ended in a tie, where neither team could claim a clear win.\r\n                                </p>\r\n                                <h3>Which players are part of England's team for the Ashes series?</h3>\r\n                                <p class=\"page-details\">\r\n                                    In the first Test of the Ashes series, the England team consists of the following players: \r\n                                    Ben Duckett, Zak Crawley, Ollie Pope, Joe Root, Harry Brook, Ben Stokes (captain), Jonny Bairstow (wicketkeeper), Moeen Ali, Stuart Broad, Ollie Robinson, James Anderson. It's worth noting that Jack Leach has unfortunately been sidelined due to injury, but Moeen Ali has stepped in as a spin option for the team.\r\n                                </p>\r\n                                <h3>Which Players are part of Australia’s team for the Ashes series?</h3>\r\n                                <p class=\"page-details\">In the upcoming Ashes series, Pat Cummins is the captain of the Australian team, and Steve Smith is the vice-captain. \r\n                                    Other players joining the Australian team in England include Alex Carey as the wicketkeeper, along with Scott Boland, Cameron Green, Marcus Harris, Josh Hazlewood, Travis Head, Josh Inglis, Usman Khawaja, Marnus Labuschagne, Nathan Lyon, Mitchell Marsh, Todd Murphy, Matt Renshaw, Mitchell Starc, and David Warner.\r\n                                </p>\r\n                                <h3>Which team is favored to win the Ashes 2023 series?</h3>\r\n                                <p class=\"page-details\">Both teams in this legendary rivalry, Australia and England, enter the Ashes series with strong momentum. Australia is expected to have the upper hand in the 2023 Ashes series as they have won four out of the last five series, including the most recent three. They have held the top spot in the world rankings since January 2022, with their only setback being a 2-1 series loss to India in the Border Gavaskar series earlier this year, which temporarily cost them the No. 1 position.</p>\r\n                            </div>\r\n                            <div class=\"general-blog\">\r\n                                <p class=\"page-details\">LINKS WILL BE AVAILABEL BEFORE 1 HOUR OF THE STARTING TIME. STAY TUNED...</p>\r\n                                <p class=\"page-details\">MEANWHILE YOU CAN EXPLORE OTHER FIXTURES OF TEAMS AND LEAGUES AND WHEN THE MATCHES WILL BE PLAYED</p>\r\n                                <p class=\"page-details\"> <span class=\"site-title details\">SPORTS<span class=\"feed\">FEED</span>24</span>  provides links and information about streaming live soccer matches on your laptop, iphone, tablet, android or macbook is now easily possible using our website anywhere round the world and just because your local pub doesn't have live sports doesn't mean you can't still sit at the bar with a cold pint and watch the game \r\n        \r\n                                    streaming soccer matches is now possible anywhere and anytime we want to. This means we can watch the games on our phone, tablet or macbook and even cast it to our tv if we want to!\r\n                                    Soccer is one of the most popular sports in the world. For people who are not able \r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"!data.game\">\r\n                        <p class=\"not-found\">No fixtures found</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1923488996439217\"\r\n            crossorigin=\"anonymous\"></script>\r\n        <!-- Horizontal above the main content -->\r\n        <ins class=\"adsbygoogle\"\r\n            style=\"display:block\"\r\n            data-ad-client=\"ca-pub-1923488996439217\"\r\n            data-ad-slot=\"2554300823\"\r\n            data-ad-format=\"auto\"\r\n            data-full-width-responsive=\"true\"></ins>\r\n        <script>\r\n            (adsbygoogle = window.adsbygoogle || []).push({});\r\n        </script>\r\n    </div>\r\n    <div *ngIf=\"newsColumn2.length > 0\" class=\"col-md-2 no-mobile-display\">\r\n        <div *ngFor=\"let new of newsColumn2\" class=\"col-md-12\">\r\n            <div class=\"card card-header news-header\">\r\n                <a [routerLink]=\"['/news/detail/',new.category, new._id ]\">\r\n                    <h4 class=\"news-title\">\r\n                        {{new.title}}\r\n                    </h4>\r\n                    <img src=\"{{ new.imageThumb }}\" alt=\"{{ new.title }}\">\r\n                    <h4 class=\"news-category\">\r\n                        {{ new.category }}\r\n                    </h4>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"news.length > 0\" class=\"col-md-2\">\r\n        <div *ngFor=\"let new of news\" class=\"col-md-12 no-web-display\">\r\n            <div class=\"card card-header news-header\">\r\n                <a [routerLink]=\"['/news/detail/',new.category, new._id ]\">\r\n                    <h4 class=\"news-title\">\r\n                        {{new.title}};\r\n                    </h4>\r\n                    <img src=\"{{ new.imageThumb }}\" alt=\"{{ new.title }}\">\r\n                    <h4 class=\"news-category\">\r\n                        {{ new.category }}\r\n                    </h4>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n        <div class=\"col-md-12 no-web-display\">\r\n            <div *ngIf=\"data.subCategoryName === 'Ashes | 2nd TEST(AUS leads 1-0)'\" class=\"ashes-blog\">\r\n                <img src=\"https://res.cloudinary.com/dp7udccyf/image/upload/v1687694258/Ashes-image_r4mcvy.webp\" alt=\"Ashes-England-VS-Australia\">\r\n\r\n                <h2>Watch Ashes 2023 online: live stream the cricket Test series</h2>\r\n                <p class=\"page-details\">\r\n                    The highly anticipated cricket showdown of the year has arrived, capturing the attention of fervent fans across the globe who are eagerly seeking out the optimal means to stream the Ashes. \r\n                   <strong>SportsFeed24</strong> provides the opportunity to watch Ashes 2023 live streams free, no matter where you are in the world. If you won't be near your usual TV setup but still want to watch The Ashes, SportsFees24 is the best platform to stream the live matches of Ashes 2023 online. Stream every Test live and free on Sportsfeed24, and never miss a minute of the action!\r\n                </p>\r\n                <h3>Men’s Ashes 2023 Live Streaming: </h3>\r\n                <p class=\"page-details\">The Men's Ashes 2023, slated to take place in England, is scheduled to run from June 16 to July 27. This thrilling series will also serve as a crucial component of the 2023-2025 World Test Championship. The five venues will be Edgbaston, Lord’s, Headingley, Old Trafford and The Oval.</p>\r\n                <h3>What is the Ashes cricket series and what makes it significant in the world of cricket?</h3>\r\n                <p class=\"page-details\">The Ashes is a cricket series played between fierce rivals England and Australia. This year, England is hosting the series. The Ashes is a Test cricket contest that has a long-standing history and is highly anticipated by fans of both teams.\r\n                    In an Ashes series, there are usually five cricket matches played. Out of the previous series, Australia has won 34 times, while England has emerged victorious 32 times. There have been six series that ended in a tie, where neither team could claim a clear win.\r\n                </p>\r\n                <h3>Which players are part of England's team for the Ashes series?</h3>\r\n                <p class=\"page-details\">\r\n                    In the first Test of the Ashes series, the England team consists of the following players: \r\n                    Ben Duckett, Zak Crawley, Ollie Pope, Joe Root, Harry Brook, Ben Stokes (captain), Jonny Bairstow (wicketkeeper), Moeen Ali, Stuart Broad, Ollie Robinson, James Anderson. It's worth noting that Jack Leach has unfortunately been sidelined due to injury, but Moeen Ali has stepped in as a spin option for the team.\r\n                </p>\r\n                <h3>Which Players are part of Australia’s team for the Ashes series?</h3>\r\n                <p class=\"page-details\">In the upcoming Ashes series, Pat Cummins is the captain of the Australian team, and Steve Smith is the vice-captain. \r\n                    Other players joining the Australian team in England include Alex Carey as the wicketkeeper, along with Scott Boland, Cameron Green, Marcus Harris, Josh Hazlewood, Travis Head, Josh Inglis, Usman Khawaja, Marnus Labuschagne, Nathan Lyon, Mitchell Marsh, Todd Murphy, Matt Renshaw, Mitchell Starc, and David Warner.\r\n                </p>\r\n                <h3>Which team is favored to win the Ashes 2023 series?</h3>\r\n                <p class=\"page-details\">Both teams in this legendary rivalry, Australia and England, enter the Ashes series with strong momentum. Australia is expected to have the upper hand in the 2023 Ashes series as they have won four out of the last five series, including the most recent three. They have held the top spot in the world rankings since January 2022, with their only setback being a 2-1 series loss to India in the Border Gavaskar series earlier this year, which temporarily cost them the No. 1 position.</p>\r\n            </div>\r\n            <div class=\"general-blog\">\r\n                <p class=\"page-details\">LINKS WILL BE AVAILABEL BEFORE 1 HOUR OF THE STARTING TIME. STAY TUNED...</p>\r\n                <p class=\"page-details\">MEANWHILE YOU CAN EXPLORE OTHER FIXTURES OF TEAMS AND LEAGUES AND WHEN THE MATCHES WILL BE PLAYED</p>\r\n                <p class=\"page-details\"> <span class=\"site-title details\">SPORTS<span class=\"feed\">FEED</span>24</span>  provides links and information about streaming live soccer matches on your laptop, iphone, tablet, android or macbook is now easily possible using our website anywhere round the world and just because your local pub doesn't have live sports doesn't mean you can't still sit at the bar with a cold pint and watch the game \r\n\r\n                    streaming soccer matches is now possible anywhere and anytime we want to. This means we can watch the games on our phone, tablet or macbook and even cast it to our tv if we want to!\r\n                    Soccer is one of the most popular sports in the world. For people who are not able \r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../../services/product.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe, Location } from '@angular/common';\r\n\r\ndeclare interface Window {\r\n  adsbygoogle: any[];\r\n}\r\ndeclare var adsbygoogle: any[];\r\n\r\n@Component({\r\n  selector: 'fixture',\r\n  templateUrl: './fixture.component.html',\r\n  styleUrls: ['./fixture.component.css'],\r\n  providers: [DatePipe]\r\n})\r\nexport class FixtureComponent implements OnInit {\r\n  loading:boolean = false;\r\n  game: any = {};\r\n  currentDate:any = new Date();\r\n  teamA: any;\r\n  teamB: any;\r\n  filterType: string;\r\n  categoryName: string;\r\n  subCateogryName: string;\r\n  data: any = {};\r\n  matchDateTime: any;\r\n  days:number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n  counter: string = \"\";\r\n  streamLinks: any = [];\r\n  getStreams = false;\r\n  fixture: any;\r\n  matchFinished:boolean = false;\r\n  currentLocaDate:any = new Date();\r\n  matchTime:any;\r\n  matchIsLive:boolean = false;\r\n  matchDate:string = \"\";\r\n  specialDateTime:any;\r\n  newsColumn1:any = [];\r\n  newsColumn2:any = [];\r\n  news:any = [];\r\n  fixtureDate:any;\r\n  timeDiff:any;\r\n  currentUTCTime:any;\r\n  fixtureDateTime:any;\r\n\r\n  constructor(\r\n    private datePipe: DatePipe,\r\n    private productService:ProductService,\r\n    private activeRoute: ActivatedRoute,\r\n    private location: Location\r\n    ) {\r\n    this.activeRoute.params.subscribe(val => {\r\n      this.game = val.gameName;\r\n      if(val.fixtureTeams){\r\n        localStorage.clear();\r\n        this.filterType = 'fixture';\r\n        this.teamA = val.fixtureTeams.split('-vs-')[0];\r\n        this.teamB = val.fixtureTeams.split('-vs-')[1];\r\n        this.categoryName = val.collection;\r\n        this.subCateogryName = val.category;\r\n      }\r\n    });\r\n    this.currentDate = this.datePipe.transform(this.currentDate, 'dd-MM-YYYY');\r\n  }\r\n\r\n    ngOnInit(): void {\r\n      this.getStreams = true;\r\n      const fix = this.location.getState();\r\n      if(fix[\"fixture\"]){\r\n        localStorage.clear();\r\n        this.loading = false;\r\n        this.fixture = {}\r\n        const gameFixture = JSON.parse(fix[\"fixture\"]);\r\n        if(gameFixture){\r\n          let matchdateTime = new Date(gameFixture.fixtureDate + \" \" + gameFixture.fixtureTime);\r\n          const now = new Date();\r\n          this.timeDiff = matchdateTime.getTime() - (now.getTime());\r\n          let timeRemaining = Math.abs(matchdateTime.getTime() - (now.getTime()));\r\n          if(this.timeDiff < 0){\r\n            this.matchFinished = true\r\n          }else {\r\n            const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));\r\n            const dayDiff = timeRemaining / (1000 * 60 * 60 * 24);\r\n\r\n\r\n            if(dayDiff > 0){\r\n              this.counter += days + (days > 1 ? \" days from now \": \" day \" + \"from now\")\r\n            }else if(dayDiff == 0){\r\n              const hours = Math.floor((timeRemaining / (1000 * 60 * 60)) % 24);\r\n              this.counter += hours + (hours > 1 ? \" hours from now \": \" hour from now \") \r\n            }else{\r\n              this.matchFinished = this.matchFinished\r\n            }\r\n          }\r\n          // const date = this.formatDate(gameFixture.fixtureDate);\r\n          // this.matchDate =  date.toString();\r\n          // this.fixtureDate = this.formatDate(gameFixture.fixtureDate);\r\n          // this.matchTime = gameFixture.fixtureTime;\r\n          // const fixtureDate = this.datePipe.transform(date, \"dd-MM-YYYY\");\r\n          // this.matchDateTime = this.getDateTime(date, gameFixture.fixtureTime);\r\n          // this.setCountdownInterval();\r\n          // const fixture = {\r\n          //   ...gameFixture,\r\n          //   fixtureDate: fixtureDate,\r\n          //   streamerLinks: [],\r\n  \r\n          // }\r\n          this.fixture = gameFixture;\r\n          const storageData = {\r\n            fixture: gameFixture,\r\n            fixtureDateTime: matchdateTime.getTime(),\r\n          }\r\n          localStorage.setItem('fixtureData', JSON.stringify(storageData));\r\n        }\r\n      }else {\r\n        this.getTeamFixture();\r\n        this.getLinksByMatch();\r\n        this.setCountdownInterval();\r\n      }\r\n      this.getAllNews();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n      setTimeout(() => {\r\n        try {\r\n          (window[\"adsbygoogle\"] = window[\"adsbygoogle\"] || []).push({});\r\n        } catch (e) {\r\n          console.error(\"ads\", e);\r\n        }\r\n      }, 900);\r\n    }\r\n\r\n    getTeamFixture = () => {\r\n      this.loading = false;\r\n      if(!this.game){\r\n        const data = JSON.parse(localStorage.getItem('fixtureData'));\r\n        if(data){\r\n          this.fixture = data.fixture;\r\n          this.fixtureDateTime = data.fixtureDateTime;\r\n        }\r\n        this.loading = false;\r\n      }\r\n    }\r\n\r\n    setCountdownInterval = () =>{\r\n      this.matchFinished = false;\r\n      this.matchIsLive = false;\r\n      setInterval(() => {\r\n        if(!this.matchFinished){\r\n          this.counter = \"\";\r\n        const date = this.fixtureDate ?? new Date();\r\n        const ud = this.getUTCCurrentDate(date);\r\n        this.matchDate = this.matchDate ?? ud;\r\n        const cdt = new Date(this.getUTCCurrentDateTime(ud));\r\n        const umt = this.getUTCCurrentTime(ud, this.matchTime);\r\n        \r\n        let matchdateTime = new Date(ud + \" \" + umt);\r\n        if(this.specialDateTime){\r\n            matchdateTime = this.specialDateTime;\r\n        }\r\n\r\n        const currentUTCTime = cdt.getTime();\r\n        const matchUTCTime = this.fixtureDateTime ?? matchdateTime.getTime();\r\n\r\n        if(this.fixtureDateTime){\r\n          const now = new Date();\r\n          let timeRemaining = Math.abs(currentUTCTime - matchUTCTime);\r\n\r\n          const timeDiff = this.fixtureDateTime - (now.getTime());\r\n          if(timeDiff < 0){\r\n            this.matchFinished = true\r\n          }else {\r\n            let timeRemaining = Math.abs(this.fixtureDateTime - (now.getTime()));\r\n            const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));\r\n            const dayDiff = timeRemaining / (1000 * 60 * 60 * 24);\r\n\r\n            if(dayDiff > 0){\r\n              this.counter += days + (days > 1 ? \" days from now \": \" day \" + \"from now\")\r\n            }else if(dayDiff == 0){\r\n              const hours = Math.floor((this.timeDiff / (1000 * 60 * 60)) % 24);\r\n              this.counter += hours + (hours > 1 ? \" hours from now \": \" hour from now \") \r\n            }else{\r\n              this.matchFinished = this.matchFinished\r\n            }\r\n          }\r\n        }else if(currentUTCTime > matchUTCTime){\r\n          this.counter = \"\";\r\n          const diffInMs = currentUTCTime - matchUTCTime;\r\n          const diffInMin = diffInMs / (1000 * 60);\r\n          if (diffInMin >= 120) {\r\n            this.matchFinished = true;\r\n          }else if(this.data?.game?.streamerLinks?.length < 1) {\r\n            this.getStreamLinks(this.data?.game?.sourceLink);\r\n          }else {\r\n            this.matchIsLive = true;\r\n          }\r\n        }else {\r\n          var timeRemaining = Math.abs(currentUTCTime - matchUTCTime);\r\n\r\n          const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));\r\n          const hours = Math.floor((timeRemaining / (1000 * 60 * 60)) % 24);\r\n          const minutes = Math.floor((timeRemaining / 1000 / 60) % 60);\r\n          const seconds = Math.floor((timeRemaining / 1000) % 60);\r\n\r\n          if(days > 0){\r\n            this.counter += days + (days > 1 ? \" days, \": \" day, \")\r\n          }\r\n          if(hours > 0){\r\n            this.counter += hours + (hours > 1 ? \" hours, \": \" hour, \") \r\n            this.hours = hours;\r\n          }\r\n          if(minutes > 0){\r\n            this.counter += minutes + (minutes > 1 ? \" minutes, \": \" minute, \")\r\n          }\r\n          if(seconds > 0){\r\n            this.counter += seconds + (seconds > 1 ? \" seconds\": \" second\")\r\n          }\r\n          const secInterval = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55];\r\n          if(this.matchTime?.trim()?.toLowerCase() === 'live' && (this.data?.game?.streamerLinks?.length < 1)\r\n          ){\r\n            this.loading = true;\r\n            this.getStreamLinks(this.data.game.sourceLink);\r\n            this.loading = false;\r\n          } \r\n          if(((this.data?.game?.streamerLinks?.length < 1) && hours < 1 && secInterval.includes(seconds)) ||\r\n          (this.data.game?.streamerLinks?.length < 1) && this.matchIsLive\r\n          ){\r\n            this.loading = true;\r\n            this.getStreamLinks(this.data.game.sourceLink);\r\n            // this.loading = false;\r\n          }\r\n        }\r\n        }\r\n      }, 1000);\r\n    }\r\n\r\n    getLinksByMatch = async () =>{\r\n      this.loading = true;\r\n      this.getStreams = true;\r\n      const filter = {\r\n        type: this.filterType,\r\n        teamA: this.teamA,\r\n        teamB: this.teamB,\r\n        categoryName: this.categoryName,\r\n        subCat: this.subCateogryName,\r\n      };\r\n      await this.productService.getLinksByMatch(filter).subscribe((res:any)=>{\r\n        this.data = res;\r\n        const date = new Date();\r\n        const matchTime = res?.game?.matchTime;\r\n\r\n        this.matchTime = matchTime;\r\n        if(res?.subCategoryName?.toLowerCase() === \"f1\" || res?.subCategoryName === \"Boxing\" || res?.subCategoryName?.toLowerCase() === \"tennis\"){\r\n          this.specialDateTime = new Date(res?.game?.matchDate);\r\n        }\r\n\r\n        this.matchDateTime = this.getDateTime(date, matchTime);\r\n        this.loading = false;\r\n      });\r\n    }\r\n\r\n  getStreamLinks = (link) =>{\r\n      this.loading = true;\r\n      const filter = {\r\n        categoryName: this.data.categoryName,\r\n        subCat: this.data.subCategoryName,\r\n        teamA: this.data.game.teamA,\r\n        teamB:  this.data.game.teamB,\r\n        link: link\r\n      }\r\n      this.productService.getLiveStreams(filter).subscribe(async (streamLinks:any)=>{\r\n        this.streamLinks = streamLinks;\r\n        await this.getLinksByMatch();\r\n        this.data.game.streamerLinks = streamLinks;\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  navigateLink = (link) => {\r\n    window.open(link);\r\n  }\r\n\r\n  getDateTime = (date, matchTime) => {\r\n    // Split the time string into hours and minutes\r\n    const [time, periodObj] = matchTime?.split(\" \");\r\n    const [hours, minutes] = time?.split(\":\");\r\n    const period = periodObj?.split(' ')[0].toLowerCase();\r\n\r\n    // Convert the hours to a 24-hour format if necessary\r\n    const militaryHours = period === \"pm\" ? parseInt(hours, 10) + 12 : parseInt(hours, 10);\r\n\r\n    // Set the time on the date object\r\n    date.setHours(militaryHours, parseInt(minutes, 10), 0, 0);\r\n    return new Date(date);\r\n  }\r\n\r\n  formatDate = (dateString) => {\r\n    try {\r\n      const dateComponents = dateString.split(\"-\");\r\n\r\n      const year = parseInt(dateComponents[0]);\r\n      const month = parseInt(dateComponents[1]) - 1; // months are zero-indexed\r\n      const day = parseInt(dateComponents[2]);\r\n      \r\n      return  new Date(Date.UTC(year, month, day));\r\n    } catch (error) {\r\n      return new Date();\r\n    }\r\n  }\r\n\r\n  getUTCCurrentDate = (date)=> {\r\n    const year = date.getUTCFullYear();\r\n    const month = date.getUTCMonth() + 1;\r\n    const day = date.getUTCDate();\r\n    const current = [year, month, day].join('-');\r\n    return current;\r\n  }\r\n\r\n  getUTCCurrentTime = (utcDate, time)=> {\r\n    const obj = time?.split(' ');\r\n    var seconds = this.currentLocaDate.getSeconds();\r\n    seconds = seconds < 10 ? '0'+seconds : seconds;\r\n    // return obj[0].trim() + ':' + seconds + ' ' + obj[1].trim();\r\n    const secs = obj?.length > 0 ?  obj[0]?.trim() + ':' + seconds : seconds;\r\n    return secs\r\n  }\r\n\r\n  getUTCCurrentDateTime = (utcDate)=> {\r\n    const date = new Date();\r\n      let hours = date.getUTCHours();\r\n      let m = date.getUTCMinutes();\r\n      let s = date.getUTCSeconds();\r\n      let ampm = hours >= 12 ? 'pm' : 'am';\r\n      hours = hours % 12;\r\n      hours = hours ? hours : 12; // the hour '0' should be '12'\r\n      const minutes = m < 10 ? '0'+m : m;\r\n      const seconds = s < 10 ? '0'+s : s;\r\n      const d = utcDate + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\r\n      return d;\r\n  }\r\n\r\n  getAllNews = ()=> {\r\n    this.productService.getAllNews({}).subscribe((news:any)=>{\r\n      this.news = news;\r\n      const totalLength = news.length;\r\n      // if(totalLength < 10){\r\n      //   this.newsColumn1 = news;\r\n      // }else {\r\n        const length1 = Math.floor(totalLength / 2);\r\n        this.newsColumn1 = news.slice(0, length1);\r\n        this.newsColumn2 = news.slice(length1);\r\n      // }\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card card-profile\">\r\n                    <div class=\"card-avatar\">\r\n                        <a [routerLink]=\"['/']\">\r\n                            <img class=\"img\" src=\"https://res.cloudinary.com/dp7udccyf/image/upload/v1687466497/news/Sportsfeed24-Logo_do61e2.webp\" alt=\"website-logo\"/>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <h3 class=\"card-category text-gray title-name\">SportsFeed24</h3>\r\n                        <p class=\"card-title\">watch at choice</p>\r\n                        <div class=\"col-md-10 about-body\">\r\n                            <h1 class=\"heading\">SportsFeed24 – A <strong>GO TO</strong> platform for live sports streaming\r\n                            </h1>\r\n                            <p class=\"card-description\">\r\n                                Are you looking for a platform to watch all your favorite sports online? \r\n                                Are you not willing to pay to any streaming services to watch your favorite sports?\r\n                                Then you are in luck because you have found the perfect platform where you can watch FOOTBALL NBA, UFC, FORMULA 1, CRICKET, and many more for fee. It is the safest site where you can watch without stressing about infecting your computers.\r\n                            </p>\r\n                            <p class=\"card-description\">\r\n                                GET TO KNOW US!!!! Here are more about us                                 \r\n                            </p>\r\n                            <h1 class=\"heading\">\r\n                                <a [routerLink]=\"['/']\">\r\n                                    What is Sportsfeed24?\r\n                                </a>\r\n                            </h1>\r\n                            <p class=\"card-description\">\r\n                                Our streaming service has been running for an year now an hopefully for many  years to come. We take pride in providing high quality sports courage to our users. This is a trust worthy platform where you can watch live FOOTBALL NBA, NHL, UFC, CRICKET, FORMULA etc.  In short it is a single platform where you have access to multiple sports. Long gone are the days when users had to search different sites for different sports. That’s why we created this site to remove the hustle and stress. Now you don’t need to waste your time searching for hours to find different sites.\r\n                            </p>\r\n                            <div>\r\n                                <ul class=\"nav navbar-nav\">\r\n                                    <li class=\"nav-item\">\r\n                                        <a class=\"nav-link\" [routerLink]=\"['/']\">\r\n                                            <i class=\"material-icons\">rate_review</i>\r\n                                            <span class=\"collection\">How to use Sportsfeed24 for different sports streaming?</span>\r\n                                        </a>\r\n                                        <p class=\"card-description\">\r\n                                            There are multiple steps which can be used to stream different sports on site. The steps are as under\r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">Step 1.</strong>  On your Brower search for our streaming website Sportsfeed24.                                        \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">Step 2.</strong> Our websites stream multiple sports at a time hence you have to scroll down. You will see the streaming sports on the page.                                        \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">Step 3.</strong> When you spot the sports you want to stream, click on its icon on the website page. During this action you will come across with details regarding that sport i.e list of events, news, updates etc                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">Step 4.</strong> When you click on the events that will take you to different page where there will be multiple links regarding that link                                         \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">Step 5.</strong> The last step is very straight forward, you have to click on the link of the event that you want to watch.                                        \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">Step 6.</strong> Enjoy your livestream.                                        \r\n                                        </p>\r\n                                    </li>\r\n                                    <li class=\"nav-item\">\r\n                                        <a class=\"nav-link\" [routerLink]=\"['/']\">\r\n                                            <i class=\"material-icons\">thumb_up</i>\r\n                                            <span class=\"collection\">Which Live sport stream that Sportsfeed24 offers?</span>\r\n                                        </a>\r\n                                        <p class=\"card-description\">\r\n                                            There are various sports that sportsfeed24 streams. Some of the name are as under \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            There are various sports that sportsfeed24 streams. Some of the name are as under:\r\n                                        </p>\r\n                                        <div class=\"categories\">\r\n                                            <p class=\"card-description\">\r\n                                                <strong class=\"steps\">1. FOOTBALL/SOCCER</strong>\r\n                                            </p>\r\n                                            <p class=\"card-description\">\r\n                                                Sportsfeed24 streams all the matches of all important football tournaments.. From English premier league, Bundesliga, Serie A, Ligue 1, MLS, Saudi pro league to LaLiga you can enjoy all major matches on our platform. Sportsfeed24.\r\n                                                Also streams the high quality matches of major football events i-e World Cup, UEFA cup, Champions cup etc. .\r\n                                            </p>\r\n                                        </div>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">2. UFC</strong>\r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            Many important UFC events like UFC286 on ESPN or the another very famous event  UFC pay-per-view in addition to another  UFC fight night events can be streamed on sportsfeed24.\r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">3. Boxing</strong>                                      \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            The games of important boxing organizations such as WBA, WBC or IBF are all available to stream on Sportsfeed24.                                        \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">4. NFL</strong>                                       \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            Users can live stream NFL games it includes the super bowl, in addition to regular season games, and the exciting playoffs matches. \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">5. FORMULA 1</strong>                                        \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            F1 world championship races can be streamed on this site. \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">6. CRICKET</strong>                                       \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            All format of crickets 20/20, One Day, test matches can be streamed on this site.\r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            <strong class=\"steps\">NBA</strong>                                        \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            The exciting regular season matches and play off matches of basketball can be streamed on sportsfeed24.\r\n                                        </p>\r\n                                    </li>\r\n                                    <li class=\"nav-item\">\r\n                                        <a class=\"nav-link\" [routerLink]=\"['/']\">\r\n                                            <i class=\"material-icons\">data_usage</i>\r\n                                            <span class=\"collection\">WHY YOU SHOULD YOU USE SPORTSFEED24 FOR STREAMING </span>\r\n                                        </a>\r\n                                        <p class=\"card-description\">\r\n                                            There are many reasons why you should use Sportsfeed24 for steaming. \r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            It is safe to use you can enjoy your matches without stressing about infecting your computers.\r\n                                        </p>\r\n                                        <p class=\"card-description\">\r\n                                            It is free. You don’t need to pay a single penny to enjoy your favorite sports\r\n                                            We provide high quality live sports. \r\n                                        </p>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <hr>\r\n\r\n                            <div class=\"col-md-4\" style=\"display: inline-flex; align-items:center\">\r\n                                <!-- <div class=\"col-md-2\">\r\n                                    <a href=\"https://web.facebook.com/shopwithwisezon/\">\r\n                                        <i class=\"material-icons\" style=\"font-size:48px\">facebook</i>\r\n                                    </a>\r\n                                </div>\r\n                                <div class=\"col-md-2\">\r\n                                    <a href=\"https://www.instagram.com/shopwithwisezon/\">\r\n                                        <i class=\"fa fa-instagram\" style=\"font-size:48px;color: red\"></i>\r\n                                    </a>\r\n                                </div> -->\r\n                                <!-- <div class=\"col-md-2\">\r\n                                    <a href=\"https://twitter.com/sports_feed24\">\r\n                                        <i class=\"fa fa-twitter\" style=\"font-size:48px;color: blue\"></i>\r\n                                    </a>\r\n                                </div> -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n  \r\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/cdk/collections';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() { }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = (this._itemSize > 0) ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() { return this._itemSize; }\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nScrollDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i2.DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => this._viewportSize = null);\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nViewportRuler.ɵprov = i0.ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i2.DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler)); };\nCdkVirtualScrollViewport.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n            undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode ?\n            getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), (record) => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false\n            },\n            index,\n        };\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n        ])] });\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: _RecycleViewRepeaterStrategy, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                providers: [\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: ɵngcc3._RecycleViewRepeaterStrategy, decorators: [{\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }], cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵfac = function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); };\nCdkScrollableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵfac = function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); };\nScrollingModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ], BidiModule, CdkScrollableModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/common';\nimport { DOCUMENT, Location } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgZone, Inject, Optional, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollStrategyOptions.ɵprov = i0.ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(i0.ɵɵinject(i1.ScrollDispatcher), i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1$1.DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = function BaseOverlayDispatcher_Factory(t) { return new (t || BaseOverlayDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nBaseOverlayDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function BaseOverlayDispatcher_Factory() { return new BaseOverlayDispatcher(i0.ɵɵinject(i1$1.DOCUMENT)); }, token: BaseOverlayDispatcher, providedIn: \"root\" });\nBaseOverlayDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseOverlayDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayKeyboardDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(i0.ɵɵinject(i1$1.DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click dispatch the mouse event, and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            body.addEventListener('click', this._clickListener, true);\n            body.addEventListener('auxclick', this._clickListener, true);\n            body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) { return new (t || OverlayOutsideClickDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayOutsideClickDispatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayOutsideClickDispatcher_Factory() { return new OverlayOutsideClickDispatcher(i0.ɵɵinject(i1$1.DOCUMENT), i0.ɵɵinject(i2.Platform)); }, token: OverlayOutsideClickDispatcher, providedIn: \"root\" });\nOverlayOutsideClickDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayOutsideClickDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalsForTest = (typeof window !== 'undefined' ? window : {});\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module or Angular starts tearing\n * down the testing `NgModule` (see https://github.com/angular/angular/issues/18831).\n */\nconst isTestEnvironment = (typeof globalsForTest.__karma__ !== 'undefined' && !!globalsForTest.__karma__) ||\n    (typeof globalsForTest.jasmine !== 'undefined' && !!globalsForTest.jasmine) ||\n    (typeof globalsForTest.jest !== 'undefined' && !!globalsForTest.jest) ||\n    (typeof globalsForTest.Mocha !== 'undefined' && !!globalsForTest.Mocha);\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        if (this._platform.isBrowser || isTestEnvironment) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayContainer.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(i0.ɵɵinject(i1$1.DOCUMENT), i0.ɵɵinject(i2.Platform)); }, token: OverlayContainer, providedIn: \"root\" });\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = null;\n        }\n        this._previousHostParent = this._pane = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        let finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach(cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        });\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height)\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n        this.onPositionChange = this._positionStrategy.positionChanges;\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attach this position strategy to an overlay. */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /** Disposes all resources used by the position strategy. */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /** @docs-private */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    withOffsetX(offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    withOffsetY(offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    setOrigin(origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @breaking-change 8.0.0\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\nOverlayPositionBuilder.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(i1$1.DOCUMENT), i0.ɵɵinject(i2.Platform), i0.ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location), ɵngcc0.ɵɵinject(OverlayOutsideClickDispatcher)); };\nOverlay.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location },\n    { type: OverlayOutsideClickDispatcher }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location }, { type: OverlayOutsideClickDispatcher }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() { return this._offsetX; }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() { return this._offsetY; }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() { return this._lockPosition; }\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() { return this._growAfterOpen; }\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() { return this._push; }\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    disableClose: [{ type: Input, args: ['cdkConnectedOverlayDisableClose',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }],\n    overlayOutsideClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], disableClose: [{\n            type: Input,\n            args: ['cdkConnectedOverlayDisableClose']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], overlayOutsideClick: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵfac = function OverlayModule_Factory(t) { return new (t || OverlayModule)(); };\nOverlayModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nFullscreenOverlayContainer.ɵprov = i0.ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(i0.ɵɵinject(i1$1.DOCUMENT), i0.ɵɵinject(i2.Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_a, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_c, BaseOverlayDispatcher as ɵangular_material_src_cdk_overlay_overlay_d };\n\n//# sourceMappingURL=overlay.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Directive, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, InjectFlags, Type, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether the dialog should focus the first focusable element on open. */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._setupFocusTrap();\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        this._capturePreviouslyFocusedElement();\n        // Move focus onto the dialog immediately in order to prevent the user\n        // from accidentally opening multiple dialogs at the same time.\n        this._focusDialogContainer();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            const focusContainer = !this._config.autoFocus || !this._focusTrap.focusInitialElement();\n            if (focusContainer) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /** Moves the focus inside the focus trap. */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Sets up the focus trap. */\n    _setupFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    /** Captures the element that was focused before the dialog was opened. */\n    _capturePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n}\n_MatDialogContainerBase.ɵfac = function _MatDialogContainerBase_Factory(t) { return new (t || _MatDialogContainerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\n_MatDialogContainerBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatDialogContainerBase, viewQuery: function _MatDialogContainerBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatDialogContainerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig },\n    { type: FocusMonitor }\n];\n_MatDialogContainerBase.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatDialogContainerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }, { type: ɵngcc1.FocusMonitor }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._trapFocus();\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = /*@__PURE__*/ function () { let ɵMatDialogContainer_BaseFactory; return function MatDialogContainer_Factory(t) { return (ɵMatDialogContainer_BaseFactory || (ɵMatDialogContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatDialogContainer)))(t || MatDialogContainer); }; }();\nMatDialogContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._id);\n        ɵngcc0.ɵɵattribute(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, \n    /** Id of the dialog. */\n    id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closed'), take(1)).subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef.keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length ?\n            this._getAfterAllClosed() :\n            this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, { $implicit: config.data, dialogRef }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef }\n        ];\n        if (config.direction && (!userInjector ||\n            !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = function _MatDialogBase_Factory(t) { return new (t || _MatDialogBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.OverlayContainer), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Type), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Type), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.InjectionToken)); };\n_MatDialogBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatDialogBase });\n_MatDialogBase.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: undefined },\n    { type: undefined },\n    { type: OverlayContainer },\n    { type: undefined },\n    { type: Type },\n    { type: Type },\n    { type: InjectionToken }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatDialogBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: undefined }, { type: undefined }, { type: ɵngcc3.OverlayContainer }, { type: undefined }, { type: ɵngcc0.Type }, { type: ɵngcc0.Type }, { type: ɵngcc0.InjectionToken }]; }, null); })();\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA);\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler($event) { return ctx._onButtonClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': '_onButtonClick($event)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); };\nMatDialogModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-password-dialog',\r\n  templateUrl: './password-dialog.component.html',\r\n  styleUrls: ['./password-dialog.component.css']\r\n})\r\nexport class PasswordDialogComponent {\r\n  email: string;\r\n  password: string;\r\n  authError: false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<PasswordDialogComponent>) {}\r\n\r\n  onSubmit(): void {\r\n    this.dialogRef.close({email: this.email, password:this.password});\r\n  }\r\n}\r\n","<div>\r\n  <h2>Authenticate Youeself!</h2>\r\n  <div class=\"password-dialog-container\">\r\n    <div class=\"row\">\r\n      <p>Email:</p>\r\n      <input class=\"popup-input\" type=\"email\" [(ngModel)]=\"email\">\r\n    </div>\r\n    <div class=\"row\">\r\n      <p>Password:</p>\r\n      <input class=\"popup-input\" type=\"password\" [(ngModel)]=\"password\">\r\n    </div>\r\n    <button class=\"btn btn-primary submit-button\" (click)=\"onSubmit()\">Submit</button>\r\n  </div>\r\n</div>\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Attribute, ElementRef, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Optional, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatError.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['aria-live',] }] },\n    { type: ElementRef }\n];\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    '[attr.id]': 'id',\n                    'aria-atomic': 'true'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-live']\n            }] }, { type: ɵngcc0.ElementRef }]; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, \n    /**\n     * @deprecated `_labelOptions` parameter no longer being used. To be removed.\n     * @breaking-change 12.0.0\n     */\n    // Use `ElementRef` here so Angular has something to inject.\n    _labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 40, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, ErrorStateMatcher, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/material/form-field';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder);\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue);\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._required = false;\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = (labelId ? labelId + ' ' : '');\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = function _MatSelectBase_Factory(t) { return new (t || _MatSelectBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\n_MatSelectBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatSelectBase, viewQuery: function _MatSelectBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n    } }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatSelectBase.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\n_MatSelectBase.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    _overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    panelClass: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSelectBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], _overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], panelClass: [{\n            type: Input\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize =\n                parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize && this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset =\n                Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = /*@__PURE__*/ function () { let ɵMatSelect_BaseFactory; return function MatSelect_Factory(t) { return (ɵMatSelect_BaseFactory || (ɵMatSelect_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSelect)))(t || MatSelect); }; }();\nMatSelect.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 9, vars: 12, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder mat-select-min-line\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\", \"mat-select-min-line\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [\"class\", \"mat-select-min-line\", 4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-min-line\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", ctx.panelOpen ? ctx.id + \"-panel\" : null);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._valueId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'none',\n                    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                    // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                    // value. At some point we should try to switch it back to being `listbox`.\n                    'aria-haspopup': 'true',\n                    'class': 'mat-select',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    '[class.mat-select-multiple]': 'multiple',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"]\n            }]\n    }], null, { options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); };\nMatSelectModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgZone, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = i0.ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() { return this._textareaElement.placeholder; }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        this._textareaElement.placeholder = value;\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        this._textareaElement.classList.add(this._measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = this._textareaElement.scrollHeight - 4;\n        this._textareaElement.classList.remove(this._measuringClass);\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    placeholder: [{ type: Input }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], placeholder: [{\n            type: Input\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); };\nTextFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = /*@__PURE__*/ function () { let ɵMatTextareaAutosize_BaseFactory; return function MatTextareaAutosize_Factory(t) { return (ɵMatTextareaAutosize_BaseFactory || (ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize)))(t || MatTextareaAutosize); }; }();\nMatTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    const el = event.target;\n                    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n                    // indicate different things. If the value is 0, it means that the caret is at the start\n                    // of the input, whereas a value of `null` means that the input doesn't support\n                    // manipulating the selection range. Inputs that don't support setting the selection range\n                    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n                    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n                    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required);\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    // Only mark the input as invalid for assistive technology if it has a value since the\n                    // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                    '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                    '[attr.aria-required]': 'required'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = function MatInputModule_Factory(t) { return new (t || MatInputModule)(); };\nMatInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n            MatCommonModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule,\n        MatCommonModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header card-header-success\">\r\n              <h4 class=\"card-title\">Update Team/League</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div *ngIf=\"!authenticated\" class=\"col-md-12 authenticate-btn\">\r\n                <div class=\"col-md-12 auth-card\">\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"card auth-card\">\r\n                      <div *ngIf=\"authError\" class=\"row\">\r\n                        <p class=\"auth-error\">Invalid email or password</p>\r\n                      </div>\r\n                      <button class=\"btn btn-primary authenticate\" (click)=\"openPasswordDialog()\">Authenticate</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <form *ngIf=\"authenticated\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                        <mat-select  [(value)]=\"selected\" formControlName=\"collectionName\" placeholder=\"Select Category\">\r\n                          <mat-option *ngFor=\"let item of data | keyvalue\" value=\"{{item.key}}\"> {{ item.key }} </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                        <mat-select [(value)]=\"selectedsubCategory\" formControlName=\"categoryName\" placeholder=\"Select Sub Category\">\r\n                          <mat-option *ngFor=\"let item of data[selected]; let i = index\" value=\"{{item}}\" (click)=\"getTeamLeague(item, i)\" class=\"flexible-height\">\r\n                            {{ item }}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-8\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                      <mat-label> <i class=\"material-icons\">image</i>  Select an image</mat-label>\r\n                      <hr>\r\n                      <input type=\"file\" matInput (change)=\"onFileSelected($event)\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-8\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                      <textarea matInput value=\"{{ selectedLeagueGame?.description }}\" formControlName=\"description\" placeholder=\"Description...\" rows=\"20\"></textarea>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\"  class=\"btn btn-primary pull-right\">Submit</button>\r\n                <div class=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport * as $ from \"jquery\";\r\nimport { ProductService } from 'app/services/product.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PasswordDialogComponent } from '../../../password-dialog/password-dialog.component';\r\n\r\n@Component({\r\n  selector: 'fixture-add',\r\n  templateUrl: './fixture-add.component.html',\r\n  styleUrls: ['./fixture-add.component.css']\r\n})\r\nexport class FixtureAddComponent implements OnInit {\r\n\r\n  public editorContent: any;\r\n  productForm: FormGroup;\r\n  appointment:any;\r\n  selected = ''\r\n  selectedsubCategory:any;\r\n  selectedLeagueGame: any;\r\n  allData: any;\r\n  authenticated: boolean = false;\r\n  authError:boolean = false;\r\n  selectedFile: File | null = null;\r\n  data = {\r\n    \"Teams\":[],\r\n    \"Leagues\":[]\r\n  }\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private productService:ProductService,\r\n    private router:Router,\r\n    private dialog: MatDialog\r\n    ) {\r\n   }\r\n\r\n\r\n  ngOnInit() {\r\n    this.productService.getTeamsAndLeagues().subscribe((res) => {\r\n      this.allData = res;\r\n      this.data.Teams = res.teams.map(t => t.teamName);\r\n      this.data.Leagues = res.leagues.map(l => l.leagueName);\r\n\r\n    });\r\n    let defaultForm = {\r\n      collectionName: [],\r\n      categoryName: [],\r\n      description:[],\r\n      image: [],\r\n    }\r\n    this.productForm = this.fb.group(defaultForm);\r\n  }\r\n\r\n  openPasswordDialog(): void {\r\n    const dialogRef = this.dialog.open(PasswordDialogComponent, {\r\n      width: '300px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((data: any) => {\r\n      if (data) {\r\n        // Send the password to the backend for validation\r\n        this.sendPasswordToBackend(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendPasswordToBackend(data: any): void {\r\n    this.productService.authenticateUser({email: data.email, password: data.password}).subscribe((res) => {\r\n      if(res.authenticated){\r\n        this.authenticated = true;\r\n        this.authError = false;\r\n      }else {\r\n        this.authError = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  getTeamLeague(entity, index) {\r\n    const isTeam =  this.selected === 'Teams' ? true : false;\r\n    if(isTeam){\r\n      this.selectedLeagueGame = this.allData.teams[index];\r\n    }else {\r\n      this.selectedLeagueGame = this.allData.leagues[index];\r\n    }\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    this.selectedFile = event.target.files[0] as File;\r\n  }\r\n\r\n  onSubmit() {\r\n    try {\r\n        let item = {\r\n          id: this.selectedLeagueGame._id,\r\n          name: this.productForm.value.categoryName,\r\n          isTeam: this.productForm.value.collectionName === 'Teams' ? true : false,\r\n          description: this.productForm.value.description,\r\n          public_id: this.selectedLeagueGame.publicId\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('id', item.id);\r\n        formData.append('name', item.name);\r\n        formData.append('isTeam', String(item.isTeam));\r\n        formData.append('description',item.description);\r\n        formData.append('image', this.selectedFile);\r\n        formData.append('publicId', item.public_id);\r\n        this.productService.addTeamLeague(formData).subscribe((res) => {\r\n          this.router.navigate(['']);\r\n        });\r\n    } catch (e) {  \r\n      console.log('invalid json');  \r\n    }\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"col-md-12\">\r\n    <div *ngFor=\"let new of newsColumn2\" class=\"col-md-12\">\r\n        <div class=\"card card-header news-header\">\r\n            <h4 class=\"news-title\">\r\n                {{new.title}}\r\n            </h4>\r\n            <img src=\"{{ new.image }}\" alt=\"{{ new.title }}\">\r\n            <h4 class=\"news-category\">\r\n                {{ new.category }}\r\n            </h4>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n          <div class=\"col-lg-12 col-md-12 product-main-card\">\r\n              <div class=\"card\">\r\n                <mat-progress-bar *ngIf=\"loading\" [mode]=\"'indeterminate'\"></mat-progress-bar>\r\n                  <div class=\"card-header card-header-tabs card-header-primary\">\r\n                      <div class=\"nav-tabs-navigation\">\r\n                          <div class=\"nav-tabs-wrapper\">\r\n                              <ul class=\"nav nav-tabs\" data-tabs=\"tabs\">\r\n                                <li class=\"nav-item\">\r\n                                    <a href=\"#category\" mat-button class=\"nav-link active\" data-toggle=\"tab\">\r\n                                        <strong><i class=\"material-icons\">dehaze</i></strong>\r\n                                        <div class=\"ripple-container\"></div>\r\n                                    </a>\r\n                                </li>\r\n                                <li *ngFor=\"let new of news\" class=\"nav-item\">\r\n                                    <a mat-button class=\"nav-link\" href=\"#{{ (new['_id']).split(' ').join('') }}\" data-toggle=\"tab\">\r\n                                        <p class=\"cat-name nav-category\">\r\n                                            <strong>{{ new._id }}</strong>\r\n                                        </p>\r\n                                        <div class=\"ripple-container\"></div>\r\n                                    </a>\r\n                                </li>\r\n                              </ul>\r\n                              <!-- <app-search></app-search> -->\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                      <div class=\"tab-content\">\r\n                        <div *ngIf=\"!loading\" class=\"tab-pane active\" id=\"category\">\r\n                            <div *ngFor=\"let n of news\"  class=\"tab-pane\">\r\n                                <h3 class=\"cat-name\">{{ n._id }}</h3>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 main-news\">\r\n                                        <div class=\"col-md-7\">\r\n                                            <div class=\"card card-header news-header inner-header\">\r\n                                                <a [routerLink]=\"['/news/detail/',n.records[0].category, n.records[0]._id ]\">\r\n                                                    <img class=\"main-image\" src=\"{{ n.records[0].image }}\" alt=\"{{ n.records[0].title }}\">\r\n                                                    <h4 class=\"news-category\">\r\n                                                        {{ n.records[0].category }}\r\n                                                    </h4>\r\n                                                    <h4 class=\"news-title\">\r\n                                                        {{n.records[0].title}}\r\n                                                    </h4>\r\n                                                    <p class=\"news-description\">{{n.records[0].description}}</p>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-3\">\r\n                                            <div class=\"card card-header news-header inner-header\">\r\n                                                <a [routerLink]=\"['/news/detail/',n.records[1].category, n.records[1]._id ]\">\r\n                                                    <img class=\"sub-image\" src=\"{{ n.records[1].image }}\" alt=\"{{ n.records[1].title }}\">\r\n                                                    <h4 class=\"news-category\">\r\n                                                        {{ n.records[1].category }}\r\n                                                    </h4>\r\n                                                    <h4 class=\"news-title\">\r\n                                                        {{n.records[1].title}}\r\n                                                    </h4>\r\n                                                </a>\r\n                                                <hr>\r\n                                                <!-- <a *ngIf=\"n.records.length > 2\" [routerLink]=\"['/news/detail/',n.records[2].category, n.records[2]._id ]\">\r\n                                                    <img class=\"sub-image\" src=\"{{ n.records[2].image }}\" alt=\"{{ n.records[2].title }}\">\r\n                                                    <h4 class=\"news-category\">\r\n                                                        {{ n.records[2].category }}\r\n                                                    </h4>\r\n                                                    <h4 class=\"news-title\">\r\n                                                        {{n.records[2].title}}\r\n                                                    </h4>\r\n                                                </a> -->\r\n                                                <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1923488996439217\"\r\n                                                    crossorigin=\"anonymous\"></script>\r\n                                                <!-- Verticle News Main Page Web -->\r\n                                                <ins class=\"adsbygoogle\"\r\n                                                    style=\"display:block\"\r\n                                                    data-ad-client=\"ca-pub-1923488996439217\"\r\n                                                    data-ad-slot=\"3655946735\"\r\n                                                    data-ad-format=\"auto\"\r\n                                                    data-full-width-responsive=\"true\"></ins>\r\n                                                <script>\r\n                                                    (adsbygoogle = window.adsbygoogle || []).push({});\r\n                                                </script>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-2\">\r\n                                            <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1923488996439217\"\r\n                                                crossorigin=\"anonymous\"></script>\r\n                                            <!-- Verticle News Main Page Web -->\r\n                                            <ins class=\"adsbygoogle\"\r\n                                                style=\"display:block\"\r\n                                                data-ad-client=\"ca-pub-1923488996439217\"\r\n                                                data-ad-slot=\"3655946735\"\r\n                                                data-ad-format=\"auto\"\r\n                                                data-full-width-responsive=\"true\"></ins>\r\n                                            <script>\r\n                                                (adsbygoogle = window.adsbygoogle || []).push({});\r\n                                            </script>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row news-cards\">\r\n                                        <div *ngFor=\"let new of n.records.slice(2, n.records.length)\" class=\"col-md-4\">\r\n                                            <div class=\"card card-header news-header inner-header\">\r\n                                                <a [routerLink]=\"['/news/detail/',new.category, new._id ]\">\r\n                                                    <img src=\"{{ new.image }}\" alt=\"{{ new.title }}\">\r\n                                                    <h4 class=\"news-category\">\r\n                                                        {{ new.category }}\r\n                                                    </h4>\r\n                                                    <h4 class=\"news-title\">\r\n                                                        {{new.title}}\r\n                                                    </h4>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1923488996439217\"\r\n                                                crossorigin=\"anonymous\"></script>\r\n                                            <ins class=\"adsbygoogle\"\r\n                                                style=\"display:block\"\r\n                                                data-ad-format=\"autorelaxed\"\r\n                                                data-ad-client=\"ca-pub-1923488996439217\"\r\n                                                data-ad-slot=\"5704305826\"></ins>\r\n                                            <script>\r\n                                                (adsbygoogle = window.adsbygoogle || []).push({});\r\n                                            </script>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngFor=\"let n of news\"  class=\"tab-pane\" id=\"{{ (n['_id']).split(' ').join('') }}\">\r\n                            <div>\r\n                                <h3 class=\"cat-name\">{{ n['_id'] }}</h3>\r\n                                <div class=\"row news-cards\">\r\n                                    <div *ngFor=\"let new of n.records\" class=\"col-md-8\">\r\n                                        <div class=\"card card-header news-header inner-header\">\r\n                                            <a [routerLink]=\"['/news/detail/',new.category, new._id ]\">\r\n                                                <h4 class=\"news-title\">\r\n                                                    {{new.title}}\r\n                                                </h4>\r\n                                                <img class=\"horizontal-images\" src=\"{{ new.image }}\" alt=\"{{ new.title }}\">\r\n                                                <h4 class=\"news-category\">\r\n                                                    {{ new.category }}\r\n                                                </h4>\r\n                                                <p class=\"news-description\">{{new.description}}</p>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../services/product.service';\r\n\r\n\r\n@Component({\r\n  selector: 'news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.css']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n  newsColumn1:any;\r\n  newsColumn2:any;\r\n  loading:boolean = false;\r\n  news:any;\r\n  constructor(\r\n    private productService:ProductService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getLatestNews();\r\n  }\r\n\r\n  getLatestNews = ()=> {\r\n    this.loading = true;\r\n    this.productService.getLatestNews().subscribe(async (news:any)=>{\r\n      this.news = news;\r\n      // const totalLength = news.length;\r\n      // const length1 = Math.floor(totalLength / 2);\r\n      // this.newsColumn1 = news.slice(0, length1);\r\n      // this.newsColumn2 = news.slice(length1);\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header card-header-success\">\r\n              <h4 class=\"card-title\">Add News Card</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div *ngIf=\"!authenticated\" class=\"col-md-12 authenticate-btn\">\r\n                <div class=\"col-md-12 auth-card\">\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"card auth-card\">\r\n                      <div *ngIf=\"authError\" class=\"row\">\r\n                        <p class=\"auth-error\">Invalid email or password</p>\r\n                      </div>\r\n                      <button class=\"btn btn-primary authenticate\" (click)=\"openPasswordDialog()\">Authenticate</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <form *ngIf=\"authenticated\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                      <mat-select formControlName=\"id\" placeholder=\"Select Post\">\r\n                        <mat-option *ngFor=\"let item of news; let i = index\" value=\"{{item.id}}\" (click)=\"populateData(item)\"> {{ item.title }} || <span><strong>{{ item.category }}</strong></span></mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <input matInput [(value)]=\"selectedNews.title\" formControlName=\"title\" value=\"{{selectedNews.title}}\" placeholder=\"title\" type=\"text\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <mat-form-field class=\"example-full-width\">\r\n                        <input matInput formControlName=\"category\" value=\"{{selectedNews.category}}\" placeholder=\"category\" type=\"text\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-md-2\">\r\n                    <mat-form-field>\r\n                      <mat-select placeholder=\"Trending\" required \r\n                        formControlName=\"trending\" value=\"{{selectedNews.trending}}\" >\r\n                        <mat-option value=\"false\">False</mat-option>\r\n                        <mat-option value=\"true\">True</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-8\">\r\n                      <mat-form-field class=\"example-full-width\">\r\n                        <input matInput formControlName=\"image\" value=\"{{selectedNews.image}}\" placeholder=\"image\" type=\"text\">\r\n                      </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-8\">\r\n                      <mat-form-field class=\"example-full-width\">\r\n                        <input matInput formControlName=\"imageThumb\" value=\"{{selectedNews.imageThumb}}\" placeholder=\"Image Thumbnail\" type=\"text\">\r\n                      </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-8\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                      <textarea matInput value=\"\" formControlName=\"description\" value=\"{{selectedNews.description}}\" placeholder=\"Description...\" rows=\"20\"></textarea>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-8\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                      <textarea matInput value=\"\" formControlName=\"htmlDescription\" value=\"{{selectedNews.htmlDescription}}\" placeholder=\"HTML Description...\" rows=\"25\"></textarea>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\"  class=\"btn btn-primary pull-right\">{{ operation.toUpperCase() }}</button>\r\n                <div class=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, SelectControlValueAccessor } from '@angular/forms';\r\nimport * as $ from \"jquery\";\r\nimport { ProductService } from 'app/services/product.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PasswordDialogComponent } from '../../password-dialog/password-dialog.component';\r\n\r\n@Component({\r\n  selector: 'add-news',\r\n  templateUrl: './add-news.component.html',\r\n  styleUrls: ['./add-news.component.css']\r\n})\r\nexport class AddNewsComponent implements OnInit {\r\n\r\n  public editorContent: any;\r\n  productForm: FormGroup;\r\n  authenticated: boolean = false;\r\n  authError:boolean = false;\r\n  selectedNews:any = {};\r\n  id:string = '';\r\n  news:any = [];\r\n  operation:string = \"add\";\r\n  htmlTemplate:string = `<div class=\"blog-description\">\r\n\r\n  <h2 class=\"post-intro\">Introduction</h2>\r\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean eget elit dolor. Vestibulum eu ipsum leo. Aliquam erat volutpat. Ut sed neque at ex efficitur euismod.</p>\r\n\r\n  <h2>Main Section 1</h2>\r\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vitae ipsum vel massa semper eleifend. Suspendisse potenti. Ut <a href=\"#internal-link1\">internal link 1</a> est risus, ullamcorper nec ultricies eu, mattis ac risus. Sed consequat elit ut eleifend porta. Nam aliquam nisl a lectus gravida lobortis.</p>\r\n\r\n  <h3>Subsection 1.1</h3>\r\n  <p>Pellentesque <a href=\"#internal-link2\">internal link 2</a> venenatis mauris sit amet ultrices. Integer in est vitae orci lacinia semper. Donec aliquet ligula vel turpis fringilla, et consequat dui tincidunt.</p>\r\n\r\n  <h2>Main Section 2</h2>\r\n  <p>Nulla facilisi. Morbi a nunc non velit iaculis egestas sed et ex. Aenean auctor rhoncus orci at consectetur. Curabitur tincidunt rutrum sem, ut lacinia lacus scelerisque sit amet. Nam semper justo vitae metus sollicitudin, vitae dapibus erat congue.</p>\r\n\r\n  <h3>Subsection 2.1</h3>\r\n  <p>Duis sollicitudin <a href=\"#internal-link3\">internal link 3</a> interdum metus vitae facilisis. Vestibulum auctor, velit sit amet tristique posuere, lectus sem commodo mauris, in luctus tortor purus sed nunc.</p>\r\n\r\n  <h3>Subsection 2.2</h3>\r\n  <p>Integer <a href=\"#internal-link4\">internal link 4</a> feugiat ipsum sed tortor facilisis, sed ornare sapien consequat. Morbi fermentum augue vel lacus fermentum, ac tincidunt ligula semper.</p>\r\n\r\n  <h2>Main Section 3</h2>\r\n  <p>Vestibulum <a href=\"#internal-link5\">internal link 5</a> tempor velit nec ante bibendum, vel volutpat lectus vestibulum. Donec ac aliquam massa, sit amet efficitur leo. Ut vulputate luctus leo, vel egestas risus luctus ut.</p>\r\n\r\n  <h2>Responsive Table</h2>\r\n  <div class=\"table-wrapper\">\r\n    <table class=\"fl-table\">\r\n      <thead>\r\n      <tr>\r\n          <th>Header 1</th>\r\n          <th>Header 2</th>\r\n          <th>Header 3</th>\r\n          <th>Header 4</th>\r\n          <th>Header 5</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n          <td>Content 1</td>\r\n          <td>Content 1</td>\r\n          <td>Content 1</td>\r\n          <td>Content 1</td>\r\n          <td>Content 1</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 2</td>\r\n          <td>Content 2</td>\r\n          <td>Content 2</td>\r\n          <td>Content 2</td>\r\n          <td>Content 2</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 3</td>\r\n          <td>Content 3</td>\r\n          <td>Content 3</td>\r\n          <td>Content 3</td>\r\n          <td>Content 3</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 4</td>\r\n          <td>Content 4</td>\r\n          <td>Content 4</td>\r\n          <td>Content 4</td>\r\n          <td>Content 4</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 5</td>\r\n          <td>Content 5</td>\r\n          <td>Content 5</td>\r\n          <td>Content 5</td>\r\n          <td>Content 5</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 6</td>\r\n          <td>Content 6</td>\r\n          <td>Content 6</td>\r\n          <td>Content 6</td>\r\n          <td>Content 6</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 7</td>\r\n          <td>Content 7</td>\r\n          <td>Content 7</td>\r\n          <td>Content 7</td>\r\n          <td>Content 7</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 8</td>\r\n          <td>Content 8</td>\r\n          <td>Content 8</td>\r\n          <td>Content 8</td>\r\n          <td>Content 8</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 9</td>\r\n          <td>Content 9</td>\r\n          <td>Content 9</td>\r\n          <td>Content 9</td>\r\n          <td>Content 9</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Content 10</td>\r\n          <td>Content 10</td>\r\n          <td>Content 10</td>\r\n          <td>Content 10</td>\r\n          <td>Content 10</td>\r\n      </tr>\r\n      <tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <h2 class=\"summary\">Conclusion</h2>\r\n  <p>Sed euismod, enim non feugiat pharetra, tellus eros varius leo, in interdum justo odio ac ante. Mauris eu efficitur dolor. Nulla facilisi. Sed id aliquet velit.</p>\r\n\r\n</div>`\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private productService:ProductService,\r\n    private router:Router,\r\n    private dialog: MatDialog\r\n    ) {\r\n   }\r\n\r\n\r\n  ngOnInit() {\r\n    this.productService.getAllNews({}).subscribe(async (news:any)=>{\r\n      this.news = news;\r\n    });\r\n    let defaultForm = {\r\n      id: this.id ?? null,\r\n      title: this.selectedNews.title ?? null,\r\n      category: this.selectedNews.category ?? null,\r\n      description: this.selectedNews.description ?? null,\r\n      image: this.selectedNews.image ?? null,\r\n      imageThumb: this.selectedNews.imageThumb ?? null,\r\n      trending: this.selectedNews.trending ?? null,\r\n      htmlDescription: this.selectedNews.htmlDescription ?? this.htmlTemplate\r\n    }\r\n    this.productForm = this.fb.group(defaultForm);\r\n  }\r\n\r\n  onSubmit() {\r\n    try {\r\n        let news = {\r\n          id: this.productForm.value.id ?? this.selectedNews.id,\r\n          title: this.productForm.value.title ?? this.selectedNews.title,\r\n          category: this.productForm.value.category ?? this.selectedNews.category,\r\n          image: this.productForm.value.image ?? this.selectedNews.image,\r\n          imageThumb: this.productForm.value.imageThumb ?? this.selectedNews.imageThumb,\r\n          description: this.productForm.value.description ?? this.selectedNews.description,\r\n          trending: this.productForm.value.trending === 'true' ? true : this.selectedNews.trending ?? false,\r\n          htmlDescription: this.productForm.value.htmlDescription ?? this.selectedNews.htmlDescription,\r\n        }\r\n        if(news.id){\r\n          this.productService.updateNewsCard(news).subscribe((res) => {\r\n            this.router.navigate(['']);\r\n          });\r\n        }else {\r\n          delete news.id;\r\n          this.productService.addNewsCard(news).subscribe((res) => {\r\n            this.router.navigate(['']);\r\n          });\r\n        }\r\n    } catch (e) {  \r\n      console.log('invalid json');  \r\n    }\r\n  }\r\n\r\n  populateData(news) {\r\n    this.operation = \"update\"\r\n    this.selectedNews = news;\r\n  }\r\n\r\n  openPasswordDialog(): void {\r\n    const dialogRef = this.dialog.open(PasswordDialogComponent, {\r\n      width: '300px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((data: any) => {\r\n      if (data) {\r\n        // Send the password to the backend for validation\r\n        this.sendPasswordToBackend(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendPasswordToBackend(data: any): void {\r\n    this.productService.authenticateUser({email: data.email, password: data.password}).subscribe((res) => {\r\n      console.log('res:', res);\r\n      if(res.authenticated){\r\n        this.authenticated = true;\r\n        this.authError = false;\r\n      }else {\r\n        this.authError = true;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row news-container\">\r\n    <div class=\"col-md-1\">\r\n    </div>\r\n    <!-- <div class=\"col-md-2\">\r\n        <div *ngFor=\"let new of newsColumn1\" class=\"col-md-12\">\r\n            <div (click)=\"replaceNews(new._id, 1)\" class=\"card card-header news-header\">\r\n                <a [routerLink]=\"['/news/detail/',new.category, new._id ]\">\r\n                    <h4 class=\"related-news-title\">\r\n                        {{new.title}}\r\n                    </h4>\r\n                    <img class=\"related-news\" src=\"{{ new.image }}\" alt=\"{{ new.title }}\">\r\n                    <h4 class=\"related-news-category\">\r\n                        {{ new.category }}\r\n                    </h4>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    <div class=\"col-lg-7 col-md-8\">\r\n        <div >\r\n            <div class=\"card header-card\">\r\n                <mat-progress-bar\r\n                *ngIf=\"loading\"\r\n                [mode]=\"'indeterminate'\">\r\n                </mat-progress-bar>\r\n                <div class=\"card-body\">\r\n                    <div class=\"col-md-12 details-post\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-1\">\r\n                                </div>\r\n                                <div class=\"col-md-10\">\r\n                                    <div class=\"news-headers\">\r\n                                        <h1 class=\"news-title\">\r\n                                            {{news.title}}\r\n                                        </h1>\r\n                                    </div>\r\n                                    <div class=\"news-headers\">\r\n                                        <a [routerLink]=\"['/news/']\">\r\n                                           <h2 class=\"related-news-category\">\r\n                                                {{ news.category }}\r\n                                            </h2>\r\n                                        </a>\r\n                                        <!-- <h2 class=\"news-category\">\r\n                                            {{ news.category }}\r\n                                        </h2> -->\r\n                                    </div>\r\n                                    <img src=\"{{ news.image }}\" alt=\"{{ news.title }}\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 news-description\">\r\n                        <!-- <div class=\"col-md-10\">\r\n                            <p *ngFor=\"let paragraph of paragraphs\"  class=\"news-details\">{{ paragraph }}</p>\r\n                        </div> -->\r\n                        <div class=\"col-md-10 news-details post-body\" [innerHTML]=\"news.htmlDescription\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <div *ngIf=\"relatedNews.length > 0\">\r\n            <div *ngFor=\"let new of relatedNews\" class=\"col-md-12\">\r\n                <div (click)=\"replaceNews(new._id, 2)\" class=\"card card-header news-header\">\r\n                    <a [routerLink]=\"['/news/detail/',new.category, new._id ]\">\r\n                        <h1 class=\"related-news-title\">\r\n                            {{new.title}}\r\n                        </h1>\r\n                        <img class=\"related-news\" src=\"{{ new.image }}\" alt=\"{{ new.title }}\">\r\n                        <h2 class=\"related-news-category\">\r\n                            {{ new.category }}\r\n                        </h2>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProductService } from '../../services/product.service'\r\n\r\n@Component({\r\n  selector: 'news-detail',\r\n  templateUrl: './news-detail.component.html',\r\n  styleUrls: ['./news-detail.component.css']\r\n})\r\nexport class NewsDetailComponent implements OnInit {\r\n  newsId:string;\r\n  loading:boolean = false;\r\n  news:any = {};\r\n  relatedNews:any = [];\r\n  newsCategory:string;\r\n  paragraphs:any = [];\r\n  newsColumn1: any = [];\r\n  newsColumn2: any = [];\r\n\r\n  constructor(\r\n    private productService:ProductService,\r\n    private router: Router,\r\n    private activeRoute: ActivatedRoute) {\r\n    this.activeRoute.params.subscribe(val => {\r\n      this.newsCategory = val.category;\r\n      this.newsId = val.newsId;\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getNewsById();\r\n  }\r\n\r\n  getNewsById(){\r\n    this.loading=true;\r\n    const filter = {\r\n      _id: this.newsId,\r\n      category: this.newsCategory\r\n    }\r\n    this.productService.getNewsById(filter).subscribe((res)=>{ \r\n      this.news = res.news;\r\n      this.relatedNews = res.relatedNews;\r\n      this.paragraphs = res.news.description?.split('\\n\\n') //split up\r\n      const totalLength = res.relatedNews.length;\r\n      const length1 = Math.floor(totalLength / 2);\r\n      this.newsColumn1 = res.relatedNews.slice(0, length1);\r\n      this.newsColumn2 = res.relatedNews.slice(length1);\r\n      this.loading=false;\r\n    });\r\n  }\r\n\r\n  replaceNews = (newsId, columnNo)=> {\r\n    // const column = columnNo == 1 ? this.newsColumn1 : this.newsColumn2;\r\n    // const index = column.findIndex(x => x._id === newsId);\r\n    // const temp = column[index];\r\n    const index = this.relatedNews.findIndex(x => x._id === newsId);\r\n    const temp = this.relatedNews[index];\r\n    // columnNo == 1 ? this.newsColumn1[index] = this.news: this.newsColumn2[index] = this.news;\r\n    this.relatedNews[index] = this.news;\r\n    this.news = temp;\r\n    this.paragraphs = temp.description?.split('\\n\\n') //split up\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'privacy-policy',\r\n  templateUrl: './privacy-policy.component.html',\r\n  styleUrls: ['./privacy-policy.component.css']\r\n})\r\nexport class PrivacyPolicyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n       <div class=\"col-md-12\">\r\n          <div class=\"card card-profile\">\r\n             <div class=\"card-avatar\">\r\n                <a [routerLink]=\"['/']\">\r\n                <img class=\"img\" src=\"https://res.cloudinary.com/dp7udccyf/image/upload/v1687466497/news/Sportsfeed24-Logo_do61e2.webp\" alt=\"website-logo\"/>\r\n                </a>\r\n             </div>\r\n             <div class=\"card-body\">\r\n                <h3 class=\"card-category text-gray title-name\">Privacy Policy</h3>\r\n                <p class=\"date-display\">Last updated: June 23, 2023</p>\r\n                <div class=\"col-md-10 about-body\">\r\n                <p>This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service and tells You about Your privacy rights and how the law protects You.</p>\r\n                <h1>Interpretation and Definitions</h1>\r\n                <h2>Interpretation</h2>\r\n                <p>The words of which the initial letter is capitalized have meanings defined under the following conditions. The ensuing delineations shall have the same meaning anyhow of whether they appear in singular or in plural.</p>\r\n                <h2>Definitions</h2>\r\n                <p>Privacy ploicy's purpose:</p>\r\n                <ul>\r\n                   <li>\r\n                      <p><strong>Account</strong> means a unique account created for You to access our Service or parts of our Service.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Affiliate</strong> Chapter means a reality that controls, is controlled by or is under common control with a party, where \" control \" means power of 50 or further of the shares, equity interest or other securities entitled to bounce for election of directors or other managing authority. \r\n                      </p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Company</strong> (referred to as either &quot;the Company&quot;, &quot;We&quot;, &quot;Us&quot; or &quot;Our&quot; in this Agreement) refers to Sportsfeed24.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Cookies</strong> are small files that are placed on Your computer, mobile device or any other device by a website, containing the details of Your browsing history on that website among its many uses.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Country:</strong> refers to: Globally</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Device</strong> means any device that can access the Service such as a computer, a cellphone or a digital tablet.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Personal Data</strong> is any information that relates to an identified or identifiable individual.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Service</strong> refers to the Website.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Service Provider</strong> means any natural or legal person who processes the data on behalf of the Company. It refers to third- party companies or individuals employed by the Company to grease the Service, to give the Service on behalf of the Company, to perform services related to the Service or to help the Company in assaying how the Service is used</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Third-party Social Media Service</strong> refers to any website or any social network website through which a stoner can log in or produce an account to use the Service. \r\n                        .</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Operation Data </strong>  refers to data collected automatically, either generated by the use of the Service or from the Service structure itself( for illustration, the duration of a runner visit). \r\n                        .</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Website</strong> refers to Sportsfeed24, accessible from <a [routerLink]=\"['/']\" rel=\"external nofollow noopener\" target=\"_blank\">https://www.sportsfeed24.com</a></p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>You</strong> mean the individual penetrating or using the Service, or the company, or other legal reality on behalf of which similar existent is penetrating or using the Service, as applicable. \r\n                      </p>\r\n                   </li>\r\n                </ul>\r\n                <h1>Collecting and Using Your Personal Data</h1>\r\n                <h2>Types of Data Collected</h2>\r\n                <h3>Personal Data</h3>\r\n                <p>While using Our Service, We may ask You to give Us with certain tête-à-tête identifiable information that can be used to communicate or identify You. tête-à-tête identifiable information may include, but isn't limited to:</p>\r\n                <h3>Usage Data</h3>\r\n                <p>Usage Data is collected automatically when using the Service.</p>\r\n                <p>Operation Data may include information similar as Your Device's Internet Protocol address(e.g. IP address), cybersurfer type, cybersurfer interpretation, the runners of our Service that You visit, the time and date of Your visit, the time spent on those runners, unique device identifiers and other individual data.</p>\r\n                \r\n               <p>We may also collect information that Your cybersurfer sends whenever You visit our Service or when You pierce the Service by or through a mobile device \r\n               </p>                \r\n               <p>\r\n                  You may also have the option of participating fresh information with the Company through Your Third- Party Social Media Service'saccount.However, during enrollment or else, You're giving the Company authorization to use, If You choose to give similar information and Personal Data. \r\n\r\n               </p>\r\n                <h3>Tracking Technologies and Cookies</h3>\r\n                <p>We use Cookies and similar tracking technologies to track the activity on Our Service and store certain information. Tracking technologies used are beacons, tags, and scripts to collect and track information and to improve and analyze Our Service. The technologies We use may include:</p>\r\n                <ul>\r\n                   <li><strong>Cookies or Browser Cookies.</strong> A cookie is a small file placed on Your Device. You can instruct Your browser to refuse all Cookies or to indicate when a Cookie is being sent. However, if You do not accept Cookies, You may not be able to use some parts of our Service. Unless you have adjusted Your browser setting so that it will refuse Cookies, our Service may use Cookies.</li>\r\n                   <li><strong>Web Beacons.</strong> Certain sections of our Service and our emails may contain small electronic files known as web beacons (also referred to as clear gifs, pixel tags, and single-pixel gifs) that permit the Company, for example, to count users who have visited those pages or opened an email and for other related website statistics (for example, recording the popularity of a certain section and verifying system and server integrity).</li>\r\n                </ul>\r\n                <p>Cookies can be &quot;Persistent&quot; or &quot;Session&quot; Cookies. Persistent Cookies remain on Your personal computer or mobile device when You go offline, while Session Cookies are deleted as soon as You close Your web browser.</p>\r\n                <p>We use both Session and Persistent Cookies for the purposes set out below:</p>\r\n                <ul>\r\n                   <li>\r\n                      <p><strong>Necessary / Essential Cookies</strong></p>\r\n                      <p>Type: Session Cookies</p>\r\n                      <p>Administered by: Us</p>\r\n                      <p>Purpose: These Cookies are essential to provide You with services available through the Website and to enable You to use some of its features.They help to authenticate druggies and help fraudulent use of stoner accounts. Without these eyefuls, the services that You have asked for can not be handed, and We only use these eyefuls to give You with those services. \r\n                     </p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Cookies Policy / Notice Acceptance Cookies</strong></p>\r\n                      <p>Type: Persistent Cookies</p>\r\n                      <p>Administered by: Us</p>\r\n                      <p>Purpose: These Cookies identify if users have accepted the use of cookies on the Website.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>Functionality Cookies</strong></p>\r\n                      <p>Type: Persistent Cookies</p>\r\n                      <p>Administered by: Us</p>\r\n                      <p>Purpose: These Cookies allow us to remember choices You make when You use the Website, such as remembering your login details or language preference. The purpose of these Cookies is to provide You with a more personal experience and to avoid You having to re-enter your preferences every time You use the Website.</p>\r\n                   </li>\r\n                </ul>\r\n                <h2>Use of Your Personal Data</h2>\r\n                <p>The Company may use Personal Data for the following purposes:</p>\r\n                <ul>\r\n                   <li>\r\n                      <p><strong>To provide and maintain our Service</strong>, including to monitor the usage of our Service.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>To manage Your Account:</strong> to manage Your registration as a user of the Service. The Personal Data You provide can give You access to different functionalities of the Service that are available to You as a registered user.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>For the performance of a contract:</strong> the development, compliance and undertaking of the purchase contract for the products, items or services You have purchased or of any other contract with Us through the Service.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>To contact You:</strong> To contact You by email, telephone calls, SMS, or other equivalent forms of electronic communication, such as a mobile application's push notifications regarding updates or informative communications related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for their implementation.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>To provide You</strong> with news, special offers and general information about other goods, services and events which we offer that are similar to those that you have already purchased or enquired about unless You have opted not to receive such information.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>To manage Your requests:</strong> To attend and manage Your requests to Us.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>For business transfers:</strong> We may use Your information to evaluate or conduct a merger, divestiture, restructuring, reorganization, dissolution, or other sale or transfer of some or all of Our assets, whether as a going concern or as part of bankruptcy, liquidation, or similar proceeding, in which Personal Data held by Us about our Service users is among the assets transferred.</p>\r\n                   </li>\r\n                   <li>\r\n                      <p><strong>For other purposes</strong>: We may use Your information for other purposes, such as data analysis, identifying usage trends, determining the effectiveness of our promotional campaigns and to evaluate and improve our Service, products, services, marketing and your experience.</p>\r\n                   </li>\r\n                </ul>\r\n                <p>We may share Your personal information in the following situations:</p>\r\n                <ul>\r\n                   <li>\r\n                     <strong>With Service Providers:</strong>We may partake Your particular information with Service Providers to cover and dissect the use of our Service, to communicate You \r\n                     .\r\n                  </li>\r\n                   <li><strong>For business transfers:</strong> We may partake or transfer Your particular information in connection with, or during accommodations of, any junction, trade of Company means, backing, or accession of all or a portion of Our business to another company \r\n                     .</li>\r\n                   <li><strong>With Affiliates:</strong> We may partake Your information with Our cells, in which case we will bear those cells to recognize this sequestration Policy. Affiliates include Our parent company and any other accessories, common adventure mates or other companies that We control or that are under common control with Us. \r\n                   </li>\r\n                   <li><strong>With business partners:</strong> We may share Your information with Our business partners to offer You certain products, services or promotions.</li>\r\n                   <li><strong>With Your consent</strong>: We may disclose Your personal information for any other purpose with Your consent.</li>\r\n                </ul>\r\n                <h2>Retention of Your Personal Data</h2>\r\n                <p>The Company will retain Your Personal Data only for as long as is necessary for the purposes set out in this sequestration Policy. We'll retain and use Your Personal Data to the extent necessary to misbehave with our legal scores( for illustration, if we're needed to retain your data to misbehave with applicable laws), resoluteness controversies, and apply our legal agreements and programs. \r\n               </p>\r\n                <p>The Company will also retain Usage Data for internal analysis purposes. Usage Data is generally retained for a shorter period of time, except when this data is used to strengthen the security or to improve the functionality of Our Service, or We are legally obligated to retain this data for longer time periods.</p>\r\n                <h2>Transfer of Your Personal Data</h2>\r\n                <p>Your information, including Personal Data, is processed at the Company's operating offices and in any other places where the parties involved in the processing are located. It means that this information may be transferred to — and maintained on — computers located outside of Your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from Your jurisdiction.</p>\r\n                <p>Your consent to this Privacy Policy followed by Your submission of such information represents Your agreement to that transfer.</p>\r\n                <p>The Company will take all way nicely necessary way to insure that Your data is treated securely and in agreement with this sequestration Policy and no transfer of Your Personal Data will take place to an association or a country unless there are acceptable controls in place including the security of Your data and other particular information \r\n                  .</p>\r\n                <h2>Delete Your Personal Data</h2>\r\n                <p>You have the right to delete or request that We assist in deleting the Personal Data that We have collected about You.</p>\r\n                <p>Our Service may give You the ability to delete certain information about You from within the Service.</p>\r\n                <p>You may modernize, amend, or cancel Your information at any time by subscribing in to Your Account, if you have one, and visiting the account settings section that allows you to manage Your particular information. You may also communicate Us to request access to, correct, or cancel any particular information that You have handed to Us \r\n               .</p>\r\n                <p>Please note, however, that We may need to retain certain information when we have a legal obligation or lawful basis to do so.</p>\r\n                <h2>Disclosure of Your Personal Data</h2>\r\n                <h3>Business Transactions</h3>\r\n                <p>If the Company is involved in a merger, acquisition or asset sale, Your Personal Data may be transferred. We will provide notice before Your Personal Data is transferred and becomes subject to a different Privacy Policy.</p>\r\n                <h3>Law enforcement</h3>\r\n                <p>Under certain circumstances, the Company may be needed to expose Your Personal Data if needed to do so by law or in response to valid requests by public authorities(e.g. a court or a government agency). \r\n               </p>\r\n                <h3>Other legal requirements</h3>\r\n                <p>The Company may disclose Your Personal Data in the good faith belief that such action is necessary to:</p>\r\n                <ul>\r\n                   <li>Comply with a legal obligation</li>\r\n                   <li>Protect and defend the rights or property of the Company</li>\r\n                   <li>Prevent or investigate possible wrongdoing in connection with the Service</li>\r\n                   <li>Protect the personal safety of Users of the Service or the public</li>\r\n                   <li>Protect against legal liability</li>\r\n                </ul>\r\n                <h2>Security of Your Personal Data</h2>\r\n                <p>The security of Your Personal Data is important to Us, but flash back that no system of transmission over the Internet, or system of electronic storehouse is 100 secure. While We strive to use commercially respectable means to cover Your Personal Data, We can not guarantee its absolute security. \r\n               </p>\r\n                <h1>Children's Privacy</h1>\r\n                <p>Our Service doesn't address anyone under the age of 13. We don't deliberately collect tête-à-tête identifiable information from anyone under the age of 13. still, please communicate Us, If You're a parent or guardian and You're apprehensive that Your child has handed Us with particularData.However, We take way to remove that information from Our waiters, If We come apprehensive that We've collected Personal Data from anyone under the age of 13 without verification of maternal concurrence. \r\n               </p>\r\n                <p>If We need to rely on consent as a legal basis for processing Your information and Your country requires consent from a parent, We may require Your parent's consent before We collect and use that information.</p>\r\n                <h1>Links to Other Websites</h1>\r\n                <p>Our Service may contain links to other websites that aren't operated byUs.However, You'll be directed to that third party's point, If You click on a third party link. We explosively advise You to review the sequestration Policy of every point You visit. \r\n               </p>\r\n                <p>Our Service may contain links to other websites that are not operatedbyUs.However, You will be directed to that third party's point, If You click on a third party link. We strongly advise You to review the insulation Policy of every point You visit. \r\n               </p>\r\n                <h1>Changes to this Privacy Policy</h1>\r\n                <p>We may modernize Our sequestration Policy from time to time. We'll notify You of any changes by posting the new sequestration Policy on this runner. \r\n               </p>\r\n                <p>We'll let You know via dispatch and/ or a prominent notice on Our Service, previous to the change getting effective and modernize the \" Last streamlined \" date at the top of this sequestration Policy. \r\n               </p>\r\n                <p>You're advised to review this sequestration Policy periodically for any changes. Changes to this sequestration Policy are effective when they're posted on this runner. \r\n               </p>\r\n                <h1>Contact Us</h1>\r\n                <ul>\r\n                   <li>If you have any questions about this Privacy Policy, You can contact us: <a [routerLink]=\"['/contact-us']\" rel=\"external nofollow noopener\" target=\"_blank\">Here</a></li>\r\n                </ul>\r\n             </div>\r\n          </div>\r\n       </div>\r\n    </div>\r\n</div>","import { Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from '../../dashboard/home.component';\r\nimport { ProductsComponent } from '../../products/products.component';\r\nimport { FixturesComponent } from '../../fixtures/fixtures.component';\r\nimport { FixtureComponent } from '../../fixtures/fixture/fixture.component';\r\nimport { AboutUsComponent } from '../../about-us/about-us.component';\r\nimport { CollectionComponent } from '../..//dashboard/collection/collection.component';\r\nimport { FixtureAddComponent } from '../../fixtures/fixture/fixture-add/fixture-add.component';\r\nimport { NewsComponent } from '../../news/news.component';\r\nimport { AddNewsComponent } from '../../news/add-news/add-news.component';\r\nimport { NewsDetailComponent } from '../../news/news-detail/news-detail.component';\r\nimport { PrivacyPolicyComponent } from '../../privacy-policy/privacy-policy.component';\r\nimport { ContactUsComponent } from '../../contact-us/contact-us.component';\r\n\r\n\r\nexport const AdminLayoutRoutes: Routes = [\r\n    {\r\n      path: \"\",\r\n      component: HomeComponent\r\n    },\r\n    {\r\n      path:'collection',\r\n      children: [\r\n        {\r\n          path: ':collectionName',\r\n          component: CollectionComponent\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: 'fixtures',\r\n      children: [\r\n        {\r\n          path: '',\r\n          component: FixturesComponent\r\n        },\r\n        {\r\n          path: 'teamFixture',\r\n          component: FixtureComponent,\r\n        },\r\n        {\r\n          path: 'addFixture',\r\n          component: FixtureAddComponent,\r\n        },\r\n        {\r\n          path: 'team',\r\n          children: [\r\n            {\r\n              path: ':teamName',\r\n              component: FixturesComponent\r\n            },\r\n            {\r\n              path: 'teamFixture',\r\n              component: FixtureComponent\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          path: 'team/:teamName/detail',\r\n          component: FixtureComponent\r\n        },\r\n        {\r\n          path: 'league/:leagueName',\r\n          component: FixturesComponent,\r\n        },\r\n        {\r\n          path: 'league/:leagueName/detail',\r\n          component: FixtureComponent\r\n        },\r\n        {\r\n          path: ':collection/:category',\r\n          children: [\r\n            {\r\n              path: '',\r\n              component: ProductsComponent,\r\n            },\r\n            {\r\n              path: ':fixtureTeams',\r\n              component: FixtureComponent\r\n            },\r\n          ]\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      path: 'news',\r\n      children: [\r\n        {\r\n          path: '',\r\n          component: NewsComponent\r\n        },\r\n        {\r\n          path: 'addNews',\r\n          component: AddNewsComponent,\r\n        },\r\n        {\r\n          path: 'detail/:category/:newsId',\r\n          component: NewsDetailComponent,\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      path: 'about',\r\n      component: AboutUsComponent\r\n    },\r\n    {\r\n      path: 'contact-us',\r\n      component: ContactUsComponent\r\n    },\r\n    {\r\n      path: 'privacy-policy',\r\n      component: PrivacyPolicyComponent\r\n    },\r\n    { path: '**', redirectTo: '/', pathMatch: 'full' }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'contact-us',\r\n  templateUrl: './contact-us.component.html',\r\n  styleUrls: ['./contact-us.component.css']\r\n})\r\n\r\nexport class ContactUsComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router:Router\r\n    ) {}\r\n\r\n  send(): void {\r\n    const { name, email, message } = this.form.value;\r\n    // alert(`Name: ${name}, Email: ${email}, Message: ${message} `);\r\n    alert('Thank you for reaching out to us, we will try our best to consider your request.');\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      name: this.formBuilder.control(null),\r\n      email: this.formBuilder.control(null),\r\n      message: this.formBuilder.control(null),\r\n    });\r\n  }\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card card-profile\">\r\n                    <div class=\"card-avatar\">\r\n                        <a [routerLink]=\"['/']\">\r\n                            <img class=\"img\" src=\"https://res.cloudinary.com/dp7udccyf/image/upload/v1687466497/news/Sportsfeed24-Logo_do61e2.webp\" alt=\"website-logo\"/>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"card-body contact-us-body\">\r\n                        <div class=\"col-md-8\">\r\n                            <section >\r\n                                <div>\r\n                                    <form\r\n                                    [formGroup]=\"form\"\r\n                                    (ngSubmit)=\"send()\"\r\n                                    >\r\n                                    <h1\r\n                                    >\r\n                                        SportsFeed24 Contact Form\r\n                                    </h1>\r\n                                    <div class=\"col-md-12\">\r\n                                        <label for=\"name\" >Name</label>\r\n                                        <input\r\n                                        formControlName=\"name\"\r\n                                        type=\"text\"\r\n                                        id=\"name\"\r\n                                        name=\"name\"\r\n                                        class=\"leading-8\"\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <label for=\"email\">Email</label>\r\n                                        <input\r\n                                        formControlName=\"email\"\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <label for=\"message\"\r\n                                        >Message</label\r\n                                        >\r\n                                        <textarea\r\n                                        formControlName=\"message\"\r\n                                        id=\"message\"\r\n                                        name=\"message\"\r\n                                        class=\"rounded\"\r\n                                        rows=\"5\"\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Send\r\n                                    </button>\r\n                                    </form>\r\n                                </div>\r\n                            </section> \r\n                        </div>   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n  \r\n","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Input, Optional, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\nclass _MatTooltipBase {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        /** The default delay in ms before showing the tooltip after show is called */\n        this.showDelay = this._defaultOptions.showDelay;\n        /** The default delay in ms before hiding the tooltip after hide is called */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        };\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        _ngZone.runOutsideAngular(() => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() { return this._position; }\n    set position(value) {\n        var _a;\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() { return this._message; }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() { return this._tooltipClass; }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor.monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !this._tooltipInstance._showTimeoutId && !this._tooltipInstance._hideTimeoutId)) {\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal ||\n            new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        this._tooltipInstance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset(Object.assign(Object.assign({}, origin.main), overlay.main)),\n            this._addOffset(Object.assign(Object.assign({}, origin.fallback), overlay.fallback))\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled || !this.message || !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners\n                .push(['mouseenter', () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                }]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners\n                .push(['touchstart', () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                }]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push(['mouseleave', () => this.hide()], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    style.MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\n_MatTooltipBase.ɵfac = function _MatTooltipBase_Factory(t) { return new (t || _MatTooltipBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\n_MatTooltipBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTooltipBase, inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] } });\n_MatTooltipBase.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined },\n    { type: Directionality },\n    { type: undefined },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n_MatTooltipBase.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTooltipBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined }, { type: ɵngcc5.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTooltip.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], hostAttrs: [1, \"mat-tooltip-trigger\"], exportAs: [\"matTooltip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip',\n                host: {\n                    'class': 'mat-tooltip-trigger'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        clearTimeout(this._hideTimeoutId);\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(() => {\n            this._visibility = 'visible';\n            this._showTimeoutId = undefined;\n            this._onShow();\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        clearTimeout(this._showTimeoutId);\n        this._hideTimeoutId = setTimeout(() => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = undefined;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    ngOnDestroy() {\n        clearTimeout(this._showTimeoutId);\n        clearTimeout(this._hideTimeoutId);\n        this._onHide.complete();\n    }\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    _animationDone(event) {\n        const toState = event.toState;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n}\n_TooltipComponentBase.ɵfac = function _TooltipComponentBase_Factory(t) { return new (t || _TooltipComponentBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_TooltipComponentBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _TooltipComponentBase });\n_TooltipComponentBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_TooltipComponentBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _breakpointObserver) {\n        super(changeDetectorRef);\n        this._breakpointObserver = _breakpointObserver;\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody)(\"auxclick\", function TooltipComponent_auxclick_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_0_0;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    '(body:auxclick)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵfac = function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); };\nMatTooltipModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ], MatCommonModule, CdkScrollableModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip, TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵfac = function MatCardModule_Factory(t) { return new (t || MatCardModule)(); };\nMatCardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Output, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass NgxImageZoomComponent {\r\n    constructor(renderer, changeDetectorRef) {\r\n        this.renderer = renderer;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.zoomScroll = new EventEmitter();\r\n        this.zoomPosition = new EventEmitter();\r\n        this.imagesLoaded = new EventEmitter();\r\n        this.enableLens = false;\r\n        this.lensBorderRadius = 0;\r\n        this.thumbWidth = 0;\r\n        this.thumbHeight = 0;\r\n        this.fullWidth = 0;\r\n        this.fullHeight = 0;\r\n        this.lensWidth = 100;\r\n        this.lensHeight = 100;\r\n        this.zoomMode = 'hover';\r\n        this.magnification = 1;\r\n        this.enableScrollZoom = false;\r\n        this.scrollStepSize = 0.1;\r\n        this.circularLens = false;\r\n        this.minZoomRatio = 1;\r\n        this.maxZoomRatio = 2;\r\n        this.xRatio = 0;\r\n        this.yRatio = 0;\r\n        this.zoomingEnabled = false;\r\n        this.zoomFrozen = false;\r\n        this.isReady = false;\r\n        this.thumbImageLoaded = false;\r\n        this.fullImageLoaded = false;\r\n        this.latestMouseLeft = -1;\r\n        this.latestMouseTop = -1;\r\n        this.eventListeners = [];\r\n        this.altText = '';\r\n        this.titleText = '';\r\n    }\r\n    set setThumbImage(thumbImage) {\r\n        this.thumbImageLoaded = false;\r\n        this.setIsReady(false);\r\n        this.thumbImage = thumbImage;\r\n    }\r\n    set setFullImage(fullImage) {\r\n        this.fullImageLoaded = false;\r\n        this.setIsReady(false);\r\n        this.fullImage = fullImage;\r\n    }\r\n    set setZoomMode(zoomMode) {\r\n        if (NgxImageZoomComponent.validZoomModes.some(m => m === zoomMode)) {\r\n            this.zoomMode = zoomMode;\r\n        }\r\n    }\r\n    set setMagnification(magnification) {\r\n        this.magnification = Number(magnification) || this.magnification;\r\n        this.zoomScroll.emit(this.magnification);\r\n    }\r\n    set setMinZoomRatio(minZoomRatio) {\r\n        const ratio = Number(minZoomRatio) || this.minZoomRatio || this.baseRatio || 0;\r\n        this.minZoomRatio = Math.max(ratio, this.baseRatio || 0);\r\n    }\r\n    set setMaxZoomRatio(maxZoomRatio) {\r\n        this.maxZoomRatio = Number(maxZoomRatio) || this.maxZoomRatio;\r\n    }\r\n    set setScrollStepSize(stepSize) {\r\n        this.scrollStepSize = Number(stepSize) || this.scrollStepSize;\r\n    }\r\n    set setEnableLens(enable) {\r\n        this.enableLens = Boolean(enable);\r\n    }\r\n    set setLensWidth(width) {\r\n        this.lensWidth = Number(width) || this.lensWidth;\r\n    }\r\n    set setLensHeight(height) {\r\n        this.lensHeight = Number(height) || this.lensHeight;\r\n    }\r\n    set setCircularLens(enable) {\r\n        this.circularLens = Boolean(enable);\r\n    }\r\n    set setEnableScrollZoom(enable) {\r\n        this.enableScrollZoom = Boolean(enable);\r\n    }\r\n    ngOnInit() {\r\n        this.setUpEventListeners();\r\n    }\r\n    ngOnChanges() {\r\n        if (this.enableLens) {\r\n            if (this.circularLens) {\r\n                this.lensBorderRadius = this.lensWidth / 2;\r\n            }\r\n            else {\r\n                this.lensBorderRadius = 0;\r\n            }\r\n        }\r\n        this.calculateRatioAndOffset();\r\n        this.calculateImageAndLensPosition();\r\n    }\r\n    ngOnDestroy() {\r\n        this.eventListeners.forEach((destroyFn) => destroyFn());\r\n    }\r\n    /**\r\n     * Template helper methods\r\n     */\r\n    onThumbImageLoaded() {\r\n        this.thumbImageLoaded = true;\r\n        this.checkImagesLoaded();\r\n    }\r\n    onFullImageLoaded() {\r\n        this.fullImageLoaded = true;\r\n        this.checkImagesLoaded();\r\n    }\r\n    setUpEventListeners() {\r\n        const nativeElement = this.zoomContainer.nativeElement;\r\n        switch (this.zoomMode) {\r\n            case 'hover':\r\n                this.eventListeners.push(this.renderer.listen(nativeElement, 'mouseenter', (event) => this.hoverMouseEnter(event)), this.renderer.listen(nativeElement, 'mouseleave', () => this.hoverMouseLeave()), this.renderer.listen(nativeElement, 'mousemove', (event) => this.hoverMouseMove(event)));\r\n                break;\r\n            case 'toggle':\r\n                this.eventListeners.push(this.renderer.listen(nativeElement, 'click', (event) => this.toggleClick(event)));\r\n                break;\r\n            case 'toggle-click':\r\n                this.eventListeners.push(this.renderer.listen(nativeElement, 'click', (event) => this.toggleClick(event)), this.renderer.listen(nativeElement, 'mouseleave', () => this.clickMouseLeave()), this.renderer.listen(nativeElement, 'mousemove', (event) => this.clickMouseMove(event)));\r\n                break;\r\n            case 'click':\r\n                this.eventListeners.push(this.renderer.listen(nativeElement, 'click', (event) => this.clickStarter(event)), this.renderer.listen(nativeElement, 'mouseleave', () => this.clickMouseLeave()), this.renderer.listen(nativeElement, 'mousemove', (event) => this.clickMouseMove(event)));\r\n                break;\r\n            case 'hover-freeze':\r\n                this.eventListeners.push(this.renderer.listen(nativeElement, 'mouseenter', (event) => this.hoverFreezeMouseEnter(event)), this.renderer.listen(nativeElement, 'mouseleave', () => this.hoverFreezeMouseLeave()), this.renderer.listen(nativeElement, 'mousemove', (event) => this.hoverFreezeMouseMove(event)), this.renderer.listen(nativeElement, 'click', (event) => this.hoverFreezeClick(event)));\r\n        }\r\n        if (this.enableScrollZoom) {\r\n            // Chrome: 'mousewheel', Firefox: 'DOMMouseScroll', IE: 'onmousewheel'\r\n            this.eventListeners.push(this.renderer.listen(nativeElement, 'mousewheel', (event) => this.onMouseWheel(event)), this.renderer.listen(nativeElement, 'DOMMouseScroll', (event) => this.onMouseWheel(event)), this.renderer.listen(nativeElement, 'onmousewheel', (event) => this.onMouseWheel(event)));\r\n        }\r\n        if (this.enableLens && this.circularLens) {\r\n            this.lensBorderRadius = this.lensWidth / 2;\r\n        }\r\n    }\r\n    checkImagesLoaded() {\r\n        this.calculateRatioAndOffset();\r\n        if (this.thumbImageLoaded && this.fullImageLoaded) {\r\n            this.calculateImageAndLensPosition();\r\n            this.setIsReady(true);\r\n        }\r\n    }\r\n    setIsReady(value) {\r\n        this.isReady = value;\r\n        this.imagesLoaded.emit(value);\r\n    }\r\n    /**\r\n     * Zoom position setters\r\n     */\r\n    setZoomPosition(left, top) {\r\n        this.latestMouseLeft = Number(left) || this.latestMouseLeft;\r\n        this.latestMouseTop = Number(top) || this.latestMouseTop;\r\n        const c = {\r\n            x: this.latestMouseLeft,\r\n            y: this.latestMouseTop\r\n        };\r\n        this.zoomPosition.emit(c);\r\n    }\r\n    /**\r\n     * Mouse wheel event\r\n     */\r\n    onMouseWheel(event) {\r\n        // Don't eat events if zooming isn't active\r\n        if (!this.zoomingEnabled || this.zoomFrozen) {\r\n            return;\r\n        }\r\n        event = window.event || event; // old IE\r\n        const direction = Math.max(Math.min((event.wheelDelta || -event.detail), 1), -1);\r\n        if (direction > 0) {\r\n            // up\r\n            this.setMagnification = Math.min(this.magnification + this.scrollStepSize, this.maxZoomRatio);\r\n        }\r\n        else {\r\n            // down\r\n            this.setMagnification = Math.max(this.magnification - this.scrollStepSize, this.minZoomRatio);\r\n        }\r\n        this.calculateRatio();\r\n        this.calculateZoomPosition(event);\r\n        // Prevent scrolling on page.\r\n        event.returnValue = false; // IE\r\n        if (event.preventDefault) {\r\n            event.preventDefault(); // Chrome & FF\r\n        }\r\n    }\r\n    /**\r\n     * Hover mode\r\n     */\r\n    hoverMouseEnter(event) {\r\n        this.zoomOn(event);\r\n    }\r\n    hoverMouseLeave() {\r\n        this.zoomOff();\r\n    }\r\n    hoverMouseMove(event) {\r\n        this.calculateZoomPosition(event);\r\n    }\r\n    /**\r\n     * Toggle mode\r\n     */\r\n    toggleClick(event) {\r\n        if (this.zoomingEnabled) {\r\n            this.zoomOff();\r\n        }\r\n        else {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    /**\r\n     * Click mode\r\n     */\r\n    clickStarter(event) {\r\n        if (this.zoomingEnabled === false) {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    clickMouseLeave() {\r\n        this.zoomOff();\r\n    }\r\n    clickMouseMove(event) {\r\n        if (this.zoomingEnabled) {\r\n            this.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    /**\r\n     * Hover freeze mode\r\n     */\r\n    hoverFreezeMouseEnter(event) {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    hoverFreezeMouseLeave() {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomOff();\r\n        }\r\n    }\r\n    hoverFreezeMouseMove(event) {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    hoverFreezeClick(event) {\r\n        if (this.zoomingEnabled && this.zoomFrozen) {\r\n            this.zoomFrozen = false;\r\n            this.zoomOff();\r\n        }\r\n        else if (this.zoomingEnabled) {\r\n            this.zoomFrozen = true;\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n        else {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    /**\r\n     * Private helper methods\r\n     */\r\n    zoomOn(event) {\r\n        if (this.isReady) {\r\n            this.zoomingEnabled = true;\r\n            this.calculateRatioAndOffset();\r\n            this.display = 'block';\r\n            this.calculateZoomPosition(event);\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    zoomOff() {\r\n        this.zoomingEnabled = false;\r\n        this.display = 'none';\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n    calculateZoomPosition(event) {\r\n        const newLeft = Math.max(Math.min(event.offsetX, this.thumbWidth), 0);\r\n        const newTop = Math.max(Math.min(event.offsetY, this.thumbHeight), 0);\r\n        this.setZoomPosition(newLeft, newTop);\r\n        this.calculateImageAndLensPosition();\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n    calculateImageAndLensPosition() {\r\n        let lensLeftMod = 0;\r\n        let lensTopMod = 0;\r\n        if (this.enableLens && this.latestMouseLeft > 0) {\r\n            lensLeftMod = this.lensLeft = this.latestMouseLeft - this.lensWidth / 2;\r\n            lensTopMod = this.lensTop = this.latestMouseTop - this.lensHeight / 2;\r\n        }\r\n        this.fullImageLeft = (this.latestMouseLeft * -this.xRatio) - lensLeftMod;\r\n        this.fullImageTop = (this.latestMouseTop * -this.yRatio) - lensTopMod;\r\n    }\r\n    calculateRatioAndOffset() {\r\n        this.thumbWidth = this.imageThumbnail.nativeElement.width;\r\n        this.thumbHeight = this.imageThumbnail.nativeElement.height;\r\n        // If lens is disabled, set lens size to equal thumb size and position it on top of the thumb\r\n        if (!this.enableLens) {\r\n            this.lensWidth = this.thumbWidth;\r\n            this.lensHeight = this.thumbHeight;\r\n            this.lensLeft = 0;\r\n            this.lensTop = 0;\r\n        }\r\n        // getBoundingClientRect() ? https://stackoverflow.com/a/44008873\r\n        this.offsetTop = this.imageThumbnail.nativeElement.getBoundingClientRect().top;\r\n        this.offsetLeft = this.imageThumbnail.nativeElement.getBoundingClientRect().left;\r\n        if (this.fullImage === undefined) {\r\n            this.fullImage = this.thumbImage;\r\n        }\r\n        if (this.fullImageLoaded) {\r\n            this.fullWidth = this.fullSizeImage.nativeElement.naturalWidth;\r\n            this.fullHeight = this.fullSizeImage.nativeElement.naturalHeight;\r\n            this.baseRatio = Math.max((this.thumbWidth / this.fullWidth), (this.thumbHeight / this.fullHeight));\r\n            // Don't allow zooming to smaller than thumbnail size\r\n            this.minZoomRatio = Math.max(this.minZoomRatio || 0, this.baseRatio || 0);\r\n            this.calculateRatio();\r\n        }\r\n    }\r\n    calculateRatio() {\r\n        this.magnifiedWidth = (this.fullWidth * this.magnification);\r\n        this.magnifiedHeight = (this.fullHeight * this.magnification);\r\n        this.xRatio = (this.magnifiedWidth - this.thumbWidth) / this.thumbWidth;\r\n        this.yRatio = (this.magnifiedHeight - this.thumbHeight) / this.thumbHeight;\r\n    }\r\n}\r\nNgxImageZoomComponent.validZoomModes = ['hover', 'toggle', 'click', 'toggle-click', 'hover-freeze'];\r\nNgxImageZoomComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.5\", ngImport: i0, type: NgxImageZoomComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\r\nNgxImageZoomComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.5\", type: NgxImageZoomComponent, selector: \"lib-ngx-image-zoom\", inputs: { setThumbImage: [\"thumbImage\", \"setThumbImage\"], setFullImage: [\"fullImage\", \"setFullImage\"], setZoomMode: [\"zoomMode\", \"setZoomMode\"], setMagnification: [\"magnification\", \"setMagnification\"], setMinZoomRatio: [\"minZoomRatio\", \"setMinZoomRatio\"], setMaxZoomRatio: [\"maxZoomRatio\", \"setMaxZoomRatio\"], setScrollStepSize: [\"scrollStepSize\", \"setScrollStepSize\"], setEnableLens: [\"enableLens\", \"setEnableLens\"], setLensWidth: [\"lensWidth\", \"setLensWidth\"], setLensHeight: [\"lensHeight\", \"setLensHeight\"], setCircularLens: [\"circularLens\", \"setCircularLens\"], setEnableScrollZoom: [\"enableScrollZoom\", \"setEnableScrollZoom\"], altText: \"altText\", titleText: \"titleText\" }, outputs: { zoomScroll: \"zoomScroll\", zoomPosition: \"zoomPosition\", imagesLoaded: \"imagesLoaded\" }, viewQueries: [{ propertyName: \"zoomContainer\", first: true, predicate: [\"zoomContainer\"], descendants: true, static: true }, { propertyName: \"imageThumbnail\", first: true, predicate: [\"imageThumbnail\"], descendants: true, static: true }, { propertyName: \"fullSizeImage\", first: true, predicate: [\"fullSizeImage\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div\\n    #zoomContainer\\n    class=\\\"ngxImageZoomContainer\\\"\\n    [style.width.px]=\\\"this.thumbWidth\\\"\\n    [style.height.px]=\\\"this.thumbHeight\\\"\\n>\\n    <img\\n        #imageThumbnail\\n        class=\\\"ngxImageZoomThumbnail\\\"\\n        [alt]=\\\"altText\\\"\\n        [title]=\\\"titleText\\\"\\n        [src]=\\\"thumbImage\\\"\\n        (load)=\\\"onThumbImageLoaded()\\\"\\n    />\\n\\n    <div\\n        [ngClass]=\\\"{\\n            ngxImageZoomFullContainer: true,\\n            ngxImageZoomLensEnabled: this.enableLens\\n        }\\\"\\n        [style.display]=\\\"this.display\\\"\\n        [style.top.px]=\\\"this.lensTop\\\"\\n        [style.left.px]=\\\"this.lensLeft\\\"\\n        [style.width.px]=\\\"this.lensWidth\\\"\\n        [style.height.px]=\\\"this.lensHeight\\\"\\n        [style.border-radius.px]=\\\"this.lensBorderRadius\\\"\\n    >\\n        <img\\n            #fullSizeImage\\n            class=\\\"ngxImageZoomFull\\\"\\n            [alt]=\\\"altText\\\"\\n            [title]=\\\"titleText\\\"\\n            [src]=\\\"fullImage\\\"\\n            (load)=\\\"onFullImageLoaded()\\\"\\n            [style.display]=\\\"this.display\\\"\\n            [style.top.px]=\\\"this.fullImageTop\\\"\\n            [style.left.px]=\\\"this.fullImageLeft\\\"\\n            [style.width.px]=\\\"this.magnifiedWidth\\\"\\n            [style.height.px]=\\\"this.magnifiedHeight\\\"\\n        />\\n    </div>\\n</div>\\n\", styles: [\".ngxImageZoomContainer{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail{pointer-events:all}.ngxImageZoomFull{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled{border:2px solid red;cursor:crosshair;pointer-events:none}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.5\", ngImport: i0, type: NgxImageZoomComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'lib-ngx-image-zoom', template: \"<div\\n    #zoomContainer\\n    class=\\\"ngxImageZoomContainer\\\"\\n    [style.width.px]=\\\"this.thumbWidth\\\"\\n    [style.height.px]=\\\"this.thumbHeight\\\"\\n>\\n    <img\\n        #imageThumbnail\\n        class=\\\"ngxImageZoomThumbnail\\\"\\n        [alt]=\\\"altText\\\"\\n        [title]=\\\"titleText\\\"\\n        [src]=\\\"thumbImage\\\"\\n        (load)=\\\"onThumbImageLoaded()\\\"\\n    />\\n\\n    <div\\n        [ngClass]=\\\"{\\n            ngxImageZoomFullContainer: true,\\n            ngxImageZoomLensEnabled: this.enableLens\\n        }\\\"\\n        [style.display]=\\\"this.display\\\"\\n        [style.top.px]=\\\"this.lensTop\\\"\\n        [style.left.px]=\\\"this.lensLeft\\\"\\n        [style.width.px]=\\\"this.lensWidth\\\"\\n        [style.height.px]=\\\"this.lensHeight\\\"\\n        [style.border-radius.px]=\\\"this.lensBorderRadius\\\"\\n    >\\n        <img\\n            #fullSizeImage\\n            class=\\\"ngxImageZoomFull\\\"\\n            [alt]=\\\"altText\\\"\\n            [title]=\\\"titleText\\\"\\n            [src]=\\\"fullImage\\\"\\n            (load)=\\\"onFullImageLoaded()\\\"\\n            [style.display]=\\\"this.display\\\"\\n            [style.top.px]=\\\"this.fullImageTop\\\"\\n            [style.left.px]=\\\"this.fullImageLeft\\\"\\n            [style.width.px]=\\\"this.magnifiedWidth\\\"\\n            [style.height.px]=\\\"this.magnifiedHeight\\\"\\n        />\\n    </div>\\n</div>\\n\", styles: [\".ngxImageZoomContainer{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail{pointer-events:all}.ngxImageZoomFull{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled{border:2px solid red;cursor:crosshair;pointer-events:none}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { zoomContainer: [{\r\n                type: ViewChild,\r\n                args: ['zoomContainer', { static: true }]\r\n            }], imageThumbnail: [{\r\n                type: ViewChild,\r\n                args: ['imageThumbnail', { static: true }]\r\n            }], fullSizeImage: [{\r\n                type: ViewChild,\r\n                args: ['fullSizeImage', { static: true }]\r\n            }], zoomScroll: [{\r\n                type: Output\r\n            }], zoomPosition: [{\r\n                type: Output\r\n            }], imagesLoaded: [{\r\n                type: Output\r\n            }], setThumbImage: [{\r\n                type: Input,\r\n                args: ['thumbImage']\r\n            }], setFullImage: [{\r\n                type: Input,\r\n                args: ['fullImage']\r\n            }], setZoomMode: [{\r\n                type: Input,\r\n                args: ['zoomMode']\r\n            }], setMagnification: [{\r\n                type: Input,\r\n                args: ['magnification']\r\n            }], setMinZoomRatio: [{\r\n                type: Input,\r\n                args: ['minZoomRatio']\r\n            }], setMaxZoomRatio: [{\r\n                type: Input,\r\n                args: ['maxZoomRatio']\r\n            }], setScrollStepSize: [{\r\n                type: Input,\r\n                args: ['scrollStepSize']\r\n            }], setEnableLens: [{\r\n                type: Input,\r\n                args: ['enableLens']\r\n            }], setLensWidth: [{\r\n                type: Input,\r\n                args: ['lensWidth']\r\n            }], setLensHeight: [{\r\n                type: Input,\r\n                args: ['lensHeight']\r\n            }], setCircularLens: [{\r\n                type: Input,\r\n                args: ['circularLens']\r\n            }], setEnableScrollZoom: [{\r\n                type: Input,\r\n                args: ['enableScrollZoom']\r\n            }], altText: [{\r\n                type: Input\r\n            }], titleText: [{\r\n                type: Input\r\n            }] } });\n\nclass NgxImageZoomModule {\r\n}\r\nNgxImageZoomModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.5\", ngImport: i0, type: NgxImageZoomModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxImageZoomModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.5\", ngImport: i0, type: NgxImageZoomModule, declarations: [NgxImageZoomComponent], imports: [CommonModule], exports: [NgxImageZoomComponent] });\r\nNgxImageZoomModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.5\", ngImport: i0, type: NgxImageZoomModule, imports: [[\r\n            CommonModule,\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.5\", ngImport: i0, type: NgxImageZoomModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        NgxImageZoomComponent,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                    ],\r\n                    exports: [\r\n                        NgxImageZoomComponent\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-image-zoom\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxImageZoomComponent, NgxImageZoomModule };\n//# sourceMappingURL=ngx-image-zoom.mjs.map\n","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor;stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, platform, _document, animationMode, defaults) {\n        super(elementRef);\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"tabindex\", \"-1\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    // set tab index to -1 so screen readers will read the aria-label\n                    // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                    'tabindex': '-1',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor;stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor;stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵfac = function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); };\nMatProgressSpinnerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AdminLayoutRoutes } from './admin-layout.routing';\r\nimport { HomeComponent } from '../../dashboard/home.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { ProductsComponent } from '../../products/products.component';\r\nimport { ProductCardComponent } from 'app/product-card/product-card.component';\r\nimport { ProductListComponent } from 'app/product-list/product-list.component';\r\nimport { NgxImageZoomModule } from 'ngx-image-zoom';\r\nimport { CollectionComponent } from '../../dashboard/collection/collection.component';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { CategoryComponent } from '../../dashboard/collection/category/category.component';\r\nimport { AboutUsComponent } from '../../about-us/about-us.component';\r\nimport { FixturesComponent } from '../../fixtures/fixtures.component';\r\nimport { FixtureComponent } from '../../fixtures/fixture/fixture.component';\r\nimport { FixtureAddComponent } from '../../fixtures/fixture/fixture-add/fixture-add.component'\r\nimport { NewsComponent } from '../../news/news.component';\r\nimport { AddNewsComponent } from '../../news/add-news/add-news.component';\r\nimport { PasswordDialogComponent } from '../../password-dialog/password-dialog.component';\r\nimport { NewsDetailComponent } from '../../news/news-detail/news-detail.component';\r\nimport { PrivacyPolicyComponent } from '../../privacy-policy/privacy-policy.component';\r\nimport { ContactUsComponent } from '../../contact-us/contact-us.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AdminLayoutRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatRippleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatCardModule,\r\n    MatProgressBarModule,\r\n    NgxImageZoomModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule\r\n  ],\r\n  declarations: [\r\n    HomeComponent,\r\n    ProductsComponent,\r\n    ProductCardComponent,\r\n    ProductListComponent,\r\n    CollectionComponent,\r\n    CategoryComponent,\r\n    AboutUsComponent,\r\n    FixturesComponent,\r\n    FixtureComponent,\r\n    FixtureAddComponent,\r\n    NewsComponent,\r\n    AddNewsComponent,\r\n    PasswordDialogComponent,\r\n    NewsDetailComponent,\r\n    PrivacyPolicyComponent,\r\n    ContactUsComponent\r\n  ],\r\n  providers: [PasswordDialogComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\n\r\nexport class AdminLayoutModule {}\r\n"],"sourceRoot":"webpack:///"}